{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/YouChef.png","services/index.js","services/fetchCategories.js","Redux/actions/index.js","Redux/actions/actionTypes.js","components/SearchBar.jsx","components/Header.jsx","components/Card.jsx","components/Cards.jsx","components/Footer.jsx","services/fetchRecipes.js","components/Filter.jsx","components/Filters.jsx","components/ChefLoading.jsx","pages/Foods.jsx","pages/Beverages.jsx","services/fetchIngredients.js","pages/Ingredients.jsx","services/fetchAreas.js","pages/Areas.jsx","pages/Done.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/Explore.jsx","pages/ExploreBeverages.jsx","pages/ExploreFoods.jsx","components/LikeBtn.jsx","components/DetailsDrink.jsx","components/DetailsFood.jsx","components/Loading.jsx","pages/Details.jsx","pages/Login.jsx","components/FoodInProgress.jsx","components/DrinkInProgress.jsx","components/NotFound.jsx","App.js","serviceWorker.js","Redux/reducers/recipesList.js","Redux/reducers/filter.js","Redux/reducers/index.js","Redux/store/index.js","index.js"],"names":["module","exports","fetchSearchBar","url","a","fetch","fetchItems","json","items","type","Object","keys","fetchDrinksCategories","request","response","drinks","map","strCategory","fetchMealsCategories","meals","fetchByCategory","recipeType","category","endpoint","toLowerCase","console","log","getRecipesAction","recipes","setSearch","toggleCouldRedirectAction","bool","fetchSearch","dispatch","isLoadingAction","connect","fetchSearchItems","toggleCouldRedirect","props","location","useLocation","useState","endPoint","pathname","word","filter","search","handleChange","target","name","value","typeSearch","className","data-testid","onChange","placeholder","htmlFor","id","checked","onClick","length","alert","Header","title","searchBtn","handleClick","to","src","profileIcon","alt","searchIcon","Card","item","index","cardTestid","titleTestid","thumb","state","notFound","recipesList","couldRedirect","notFoundReset","idType","slice","key","detailsURL","Footer","drinkIcon","exploreIcon","mealIcon","fetchMeals","fetchBeverages","fetchRecipes","fetchRecipeDetails","currentFilter","getRecipes","getRecipesThunk","selectFilter","newFilter","selectFilterAction","setRecipes","testId","currentFilterValue","then","data","filters","setFilters","fetchFilters","useEffect","ChefLoading","list","shouldItFetch","shouldFetch","isLoading","itFetch","setIsLoading","setTimeout","toLoad","fetchIngredients","query","responseIngredients","ingredients","strIngredient","strIngredient1","doNotFetch","setIngredients","includes","maxItemsToShow","allIngredients","getIngredients","ingredient","fetchAreas","strArea","fetchByArea","area","Areas","areas","setAreas","strMeal","strMealThumb","idMeal","Done","doneRecipes","setDoneRecipes","filteredRecipes","setFilteredRecipes","copiedLink","setCopiedLink","JSON","parse","localStorage","getItem","filtered","recipe","copyLink","link","navigator","clipboard","writeText","image","alcoholicOrNot","shareIcon","doneDate","tags","tag","indexTags","Favorites","favoriteRecipes","setFavoriteRecipes","toFilter","setToFilter","getFavoriteRecipes","dislikeRecipe","newFavorites","favorite","newFiltered","setItem","stringify","dislike","blackHeartIcon","Profile","email","setEmail","getEmail","clear","Explore","LikeBtn","like","setLike","recipeToSave","idDrink","strAlcoholic","strDrink","strDrinkThumb","likedRecipes","find","liked","checkLiked","toSave","whiteHeartIcon","DetailsDrink","inProgressRecipes","done","recommends","setRecommends","allIngrdients","setAllIngrdients","isLinkCopied","setIsLinkCopied","strInstructions","ingreQtt","measureQtt","forEach","push","quantity","shareBtn","Math","random","responsive","mobile","breakpoint","max","min","DetailsFood","strYoutube","embedId","split","frameBorder","Loading","match","params","setRecipe","loading","setLoading","setInProgressRecipes","setDone","inProgress","checkInProgressStore","isDone","isItDone","some","checkDoneRecipie","savedProgress","cocktails","Login","login","isLoginValid","password","isPasswordValid","setState","shouldRedirect","setShouldRedirect","logo","onKeyUp","RegExp","test","disabled","userData","FoodInProgress","progress","setInProgress","strTags","idRecipe","ingredientsDone","getStorage","getLocalStorage","checkProgress","isDisabled","values","every","ingr","doneRecipesLocal","Date","toLocaleDateString","month","date","year","doneRecipe","getDoneRecipes","previousProgress","savedIngredients","deleteItem","indexOf","splice","theProgress","splitBar","recipeLink","concat","DrinkInProgress","NotFound","style","textAlign","App","path","component","Details","Foods","Beverages","Ingredients","ExploreFoods","ExploreBeverages","exact","Boolean","window","hostname","INITIAL_STATE","shouldFilter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,uC,qBCA3CD,EAAOC,QAAU,IAA0B,4C,2CCA3CD,EAAOC,QAAU,IAA0B,4C,2ECA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,keCO5BC,EAPK,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEACIC,MAAMF,GADV,cACfG,EADe,gBAEDA,EAAWC,OAFV,cAEfC,EAFe,OAGfC,EAAOC,OAAOC,KAAKH,GAHJ,kBAIdA,EAAMC,IAJQ,2CAAH,sDCAPG,EAAqB,uCAAG,8BAAAR,EAAA,4DAClB,8DADkB,SAEbC,MADL,+DADkB,cAE7BQ,EAF6B,gBAGZA,EAAQN,OAHI,cAG7BO,EAH6B,yBAK5BA,EAASC,OAAOC,KAAI,qBAAGC,gBALK,2CAAH,qDAQrBC,EAAoB,uCAAG,8BAAAd,EAAA,4DACjB,0DADiB,SAEZC,MADL,2DADiB,cAE5BQ,EAF4B,gBAGXA,EAAQN,OAHG,cAG5BO,EAH4B,yBAK3BA,EAASK,MAAMH,KAAI,qBAAGC,gBALK,2CAAH,qDAQpBG,EAAe,uCAAG,WAAOC,EAAYC,GAAnB,mBAAAlB,EAAA,sEAErBmB,EAA0B,WAAfF,EAAA,mEAC+CC,GAD/C,+DAE2CA,GAJjC,SAKLjB,MAAMkB,GALD,cAKrBV,EALqB,gBAMJA,EAAQN,OANJ,cAMrBO,EANqB,yBAQpBA,EAASO,EAAWG,gBARA,yCAU3BC,QAAQC,IAAR,MAV2B,kBAWpB,IAXoB,0DAAH,wDCDfC,EAAmB,SAACC,GAAD,MAAc,CAC5CnB,KCf0B,eDgB1BmB,YAKWC,EAAY,SAACrB,GAAD,MAAY,CAAEC,KCnBb,aDmB+BD,UAM5CsB,EAA4B,SAACC,GAAD,MAAW,CAClDtB,KCvB4B,iBDwB5BsB,SAQWC,EAAc,SAAC7B,GAAD,8CAAS,WAAO8B,GAAP,eAAA7B,EAAA,6DAClC6B,EAnB8B,CAAExB,KClBR,eDoCU,SAEdP,EAAeC,GAFD,UAE5BK,EAF4B,gDAGfyB,EAfU,CAAExB,KCtBR,eDkCW,cAIlCwB,EAASJ,EAAUrB,IAJe,kBAK3ByB,EAnB2B,CAAExB,KCnBP,qBDiCK,2CAAT,uDAkBdyB,EAAkB,SAACH,GAAD,MAAW,CAAEtB,KC9ClB,aD8CoCsB,S,ME6C9D,IASeI,cAAQ,MATI,SAACF,GAAD,MAAe,CACxCG,iBAAkB,SAACjC,GAAD,OAAS8B,EAASD,EAAY7B,KAChDkC,oBAAqB,SAACN,GAAD,OAAUE,EAASH,EAA0BC,QAOrDI,EAvGf,SAAmBG,GACjB,IAAMC,EAAWC,cADO,EAEIC,mBAAS,CACnCC,SAAkC,aAAtBH,EAASI,SACjB,2CACA,+CACJC,KAAM,GACNC,OAAQ,kBAPc,mBAEjBC,EAFiB,KAETjB,EAFS,KAUlBkB,EAAe,SAAC,GAA6C,IAAD,IAA1CC,OAAUC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,WAC7C1B,QAAQC,IAAIyB,GACZtB,EAAU,2BAAKiB,GAAN,kBAAeG,EAAOC,MA0DjC,OACE,yBAAKE,UAAU,aACb,2BACE3C,KAAK,OACL4C,cAAY,eACZJ,KAAK,OACLC,MAAQJ,EAAOF,KACfU,SAAWP,EACXQ,YAAY,cACZH,UAAU,iBApDd,yBAAKA,UAAU,iBACb,2BAAOI,QAAQ,2BACb,2BACE/C,KAAK,QACLwC,KAAK,SACLC,MAAM,gBACNG,cAAY,0BACZI,GAAG,0BACHH,SAAWP,EACXW,QAA4B,kBAAlBZ,EAAOD,OACjBO,UAAU,UATd,gBAaA,2BAAOI,QAAQ,qBACb,2BACE/C,KAAK,QACLwC,KAAK,SACLC,MAAM,gBACNG,cAAY,oBACZI,GAAG,oBACHH,SAAWP,EACXW,QAA4B,kBAAlBZ,EAAOD,OACjBO,UAAU,UATd,QAaA,2BAAOI,QAAQ,6BACb,2BACE/C,KAAK,QACLwC,KAAK,SACLC,MAAM,gBACNG,cAAY,4BACZI,GAAG,4BACHH,SAAWP,EACXW,QAA4B,kBAAlBZ,EAAOD,OACjBO,UAAU,UATd,mBA4BA,4BACE3C,KAAK,SACL4C,cAAY,kBACZM,QAtEc,WAAO,IACjBvB,EAA0CE,EAA1CF,iBAAkBC,EAAwBC,EAAxBD,oBAClBK,EAA2BI,EAA3BJ,SAAUE,EAAiBE,EAAjBF,KAAMC,EAAWC,EAAXD,OACxB,GAAID,EAAKgB,QAAU,GAAgB,kBAAXf,EACtB,OAAOgB,MAAM,iDAGfzB,EADS,UAAMM,GAAN,OAAiBG,GAAjB,OAA0BD,IAEnCP,GAAoB,IA+DhBe,UAAU,iBAJZ,cClCSU,MA/Cf,SAAgBxB,GAAQ,IACdyB,EAA6BzB,EAA7ByB,MADa,EACgBzB,EAAtB0B,iBADM,WAEOvB,oBAAS,GAFhB,mBAEdK,EAFc,KAENjB,EAFM,KAIfoC,EAAc,WAClBpC,GAAWiB,IA8Bb,OACE,6BAhBA,4BAAQM,UAAU,UAChB,kBAAC,IAAD,CAAMc,GAAG,WACP,4BACEzD,KAAK,SACL4C,cAAY,kBACZc,IAAI,6BAEJ,yBAAKA,IAAMC,IAAcC,IAAI,cAGjC,wBAAIhB,cAAY,cAAeU,GAC9BC,GAtBH,4BACEvD,KAAK,SACL4C,cAAY,iBACZc,IAAI,2BACJR,QAAUM,GAEV,yBAAKE,IAAMG,IAAaD,IAAI,aAuB3BvB,GAAU,kBAAC,EAAD,Q,MCrBFyB,MApBf,YAA+D,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOhE,EAAiC,EAAjCA,KAAMiE,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YACvC1B,EAAiB,YAATxC,EAAsB,UAAY,WAC1CmE,EAAkB,YAATnE,EAAsB,eAAiB,gBAChDgD,EAAe,YAAThD,EAAsB,SAAW,UAE7C,OACE,kBAAC,IAAD,CAAMyD,GAAE,WAAOzD,EAAP,YAAe+D,EAAKf,KAC1B,yBAAKJ,cAAcqB,GAAU,UAAOD,EAAP,gBAA6BrB,UAAU,QAClE,yBAAKe,IAAMK,EAAKI,GAASP,IAAI,OAAOhB,cAAA,UAAiBoB,EAAjB,eACpC,uBAAGpB,cAAcsB,GAAW,UAAOF,EAAP,eAA4BD,EAAKvB,O,MCwBrE,IAced,eAdS,SAAC0C,GAAD,MAAY,CAClCC,SAAUD,EAAME,YAAYD,SAC5BE,cAAeH,EAAMhC,OAAOmC,kBAGH,SAAC/C,GAAD,MAAe,CACxCgD,cAAe,kBAAMhD,ELpBa,CAAExB,KCnBP,wBI+ChB0B,EA5Cf,YAA2E,IAA1D2C,EAAyD,EAAzDA,SAAUtE,EAA+C,EAA/CA,MAAO0E,EAAwC,EAAxCA,OAAQD,EAAgC,EAAhCA,cAAeD,EAAiB,EAAjBA,cACjDzC,EAAWC,cACX/B,EAA8B,aAAtB8B,EAASI,SAA2B,UAAY,UAQ9D,OACE,yBAAKS,UAAU,SACZ0B,IANHG,SACApB,MAAM,wEAMc,IAAjBrD,EAAMoD,QAAgB,gDACL,IAAjBpD,EAAMoD,QAAgBoB,EACrB,kBAAC,IAAD,CAAUd,GAAE,UAAM3B,EAASI,SAAf,YAA2BnC,EAAM,GAAG0E,MAC9C,KACH1E,EAAM2E,MAAM,EAdM,IAcanE,KAAI,SAACwD,EAAMC,GAAP,OAClC,kBAAC,EAAD,CACED,KAAOA,EACPC,MAAQA,EACRhE,KAAOA,EACP2E,IAAMX,EACNY,WAAU,UAAM9C,EAASI,SAAf,YAA2BnC,EAAM,GAAG0E,a,2DCOzCI,MA9Bf,WACE,OACE,4BAAQlC,UAAU,SAASC,cAAY,UACrC,kBAAC,IAAD,CAAMa,GAAG,YACP,4BAAQzD,KAAK,UACX,yBAAK0D,IAAMoB,IAAYlB,IAAI,QAAQhB,cAAY,wBAGnD,kBAAC,IAAD,CAAMa,GAAG,aACP,4BAAQzD,KAAK,UACX,yBACE0D,IAAMqB,IACNnB,IAAI,UACJhB,cAAY,yBAIlB,kBAAC,IAAD,CAAMa,GAAG,YACP,4BAAQzD,KAAK,UACX,yBAAK0D,IAAMsB,IAAWpB,IAAI,QAAQhB,cAAY,wBC3B3CqC,EAAU,uCAAG,gCAAAtF,EAAA,4DACP,wDADO,SAEFC,MADL,yDADO,cAElBQ,EAFkB,gBAGDA,EAAQN,OAHP,cAGlBO,EAHkB,OAIlBiE,EAAcjE,EAASK,MAJL,kBAMjB4D,GANiB,2CAAH,qDASVY,EAAc,uCAAG,gCAAAvF,EAAA,4DACX,4DADW,SAENC,MADL,6DADW,cAEtBQ,EAFsB,gBAGLA,EAAQN,OAHH,cAGtBO,EAHsB,OAItBiE,EAAcjE,EAASC,OAJD,kBAMrBgE,GANqB,2CAAH,qDASda,EAAY,uCAAG,WAAOzF,EAAKM,GAAZ,qBAAAL,EAAA,6DACpBmB,EAAWpB,EADS,SAEJE,MAAMkB,GAFF,cAEpBV,EAFoB,gBAGHA,EAAQN,OAHL,cAGpBO,EAHoB,OAIpBiE,EAAcjE,EAASL,GAJH,kBAMnBsE,GANmB,2CAAH,wDASZc,EAAkB,uCAAG,WAAOX,EAAQzB,GAAf,qBAAArD,EAAA,6DAC1BD,EAAkB,UAAX+E,EAAD,+DACgDzB,GADhD,mEAEoDA,GAHhC,SAIVpD,MAAMF,GAJI,cAI1BU,EAJ0B,gBAKTA,EAAQN,OALC,cAK1BO,EAL0B,OAM1BL,EAAOC,OAAOC,KAAKG,GANO,kBAOzBA,EAASL,GAAM,IAPU,2CAAH,wD,MC0B/B,IAgBe0B,eATS,SAAC0C,GAAD,MAAY,CAClCiB,cAAejB,EAAMhC,OAAOiD,kBARH,SAAC7D,GAAD,MAAe,CACxCI,oBAAqB,SAACN,GAAD,OAAUE,EAASH,EAA0BC,KAClEgE,WAAY,SAACnE,EAASN,GAAV,OAAuBW,ERTN,SAACZ,EAAYC,GAAb,8CAA0B,WAAOW,GAAP,eAAA7B,EAAA,sEACjCgB,EAAgBC,EAAYC,GADK,OACjDM,EADiD,OAGvDK,EAASN,EAAiBC,IAH6B,2CAA1B,sDQSeoE,CAAgBpE,EAASN,KACrE2E,aAAc,SAACC,GAAD,OAAejE,ERvBG,SAACiE,GAAD,MAAgB,CAChDzF,KC3B2B,gBD4B3ByF,aQqBsCC,CAAmBD,KACzDE,WAAY,SAACrB,GAAD,OAAiB9C,EAASN,EAAiBoD,QAY1C5C,EAzDf,YASI,IARFU,EAQC,EARDA,OACAwD,EAOC,EAPDA,OACAN,EAMC,EANDA,WACA1E,EAKC,EALDA,WACA4E,EAIC,EAJDA,aACAH,EAGC,EAHDA,cACAM,EAEC,EAFDA,WACA/D,EACC,EADDA,oBAEQM,EAAaH,cAAbG,SAmBR,OACE,4BACElC,KAAK,SACLkD,QArBgB,WAClB,IAAM2C,EAAqBzD,IAAWiD,EAAgBjD,EAAS,GAOpC,KAAvByD,EACFV,EAP4B,aAAbjD,EACb,wDACA,4DAE4B,aAAbA,EAA0B,QAAU,UAGlB4D,MAAK,SAACC,GAAD,OAAUJ,EAAWI,MAE7DT,EAAW1E,EAAYiF,GAGzBL,EAAaK,GACbjE,GAAoB,IAOlBgB,cAAcgD,EACdjD,UAAU,iBAETP,M,MCOP,IAQeV,cAAQ,MARI,SAACF,GAAD,MAAe,CACxCmE,WAAY,SAACrB,GAAD,OAAiB9C,EAASN,EAAiBoD,QAO1C5C,EAlDf,YAAwC,IAArB1B,EAAoB,EAApBA,KAAM2F,EAAc,EAAdA,WACfzD,EAAaH,cAAbG,SAD6B,EAEPF,mBAAS,IAFF,mBAE9BgE,EAF8B,KAErBC,EAFqB,KAG/BC,EAAwB,WAATlG,EAAoBG,EAAwBM,EAiBjE,OAfA0F,qBAAU,WAERD,IAAeJ,MAAK,SAACC,GAAD,OAAUE,EAAWF,EAAKrB,MAAM,EAD5B,SAEvB,CAACwB,IAaF,yBAAKvD,UAAU,WACb,4BACE3C,KAAK,SACLkD,QAdc,WAOlBiC,EAN8B,aAAbjD,EACb,wDACA,4DAE4B,aAAbA,EAA0B,QAAU,UAEpB4D,MAAK,SAACC,GAAD,OAAUJ,EAAWI,OAQzDnD,cAAY,sBACZD,UAAU,iBAJZ,OAQCqD,EAAQzF,KAAI,SAAC6B,EAAQ4B,GAAT,OACX,kBAAC,EAAD,CACEW,IAAMX,EACN5B,OAASA,EACTwD,OAAM,UAAMxD,EAAN,oBACNxB,WAAaZ,WCtCRoG,MARf,WACE,OACE,yBAAKzD,UAAU,qBACb,yBAAKA,UAAU,eAAee,IAAI,8CAA8CE,IAAI,WCqC1F,IAiBelC,eAjBS,SAAC0C,GAAD,MAAY,CAClCjD,QAASiD,EAAME,YAAY+B,KAC3BC,cAAelC,EAAME,YAAYiC,YACjCC,UAAWpC,EAAME,YAAYkC,cAGJ,SAAChF,GAAD,MAAe,CACxC8D,WAAY,SAACS,GAAD,OAAUvE,EAASN,EAAiB6E,KAChDU,QAAS,kBAAMjF,EXIiB,CAAExB,KC7CR,kBU0C1B0G,aAAc,SAACpF,GAAD,OAAUE,EAASC,EAAgBH,QAQpCI,EA/Cf,YAA0F,IAAzE4D,EAAwE,EAAxEA,WAAYnE,EAA4D,EAA5DA,QAASsF,EAAmD,EAAnDA,QAASH,EAA0C,EAA1CA,cAAeI,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,UAC1EL,qBAAU,WACRO,GAAa,GAETJ,IACFrB,IAAaa,MAAK,SAACC,GACjBT,EAAWS,GACXY,YAAW,WACTD,GAAa,KALH,SAQdD,OAED,CAACnB,EAAYmB,EAASC,EAAcJ,IAEvC,IAAMM,EACJ,6BACE,kBAAC,EAAD,CAAS5G,KAAK,UACd,kBAAC,EAAD,CAAOD,MAAQoB,EAAUsD,OAAO,YAGpC,OACE,yBAAKzB,GAAG,UAAUL,UAAU,SAC1B,kBAAC,EAAD,CAAQW,MAAM,mBAAmBC,WAAS,IACzCiD,EAAY,kBAAC,EAAD,MAAkBI,EAC/B,kBAAC,EAAD,UCYN,IAiBelF,eAjBS,SAAC0C,GAAD,MAAY,CAClCjD,QAASiD,EAAME,YAAY+B,KAC3BC,cAAelC,EAAME,YAAYiC,YACjCC,UAAWpC,EAAME,YAAYkC,cAGJ,SAAChF,GAAD,MAAe,CACxC8D,WAAY,SAACS,GAAD,OAAUvE,EAASN,EAAiB6E,KAChDU,QAAS,kBAAMjF,EZHiB,CAAExB,KC7CR,kBWiD1B0G,aAAc,SAACpF,GAAD,OAAUE,EAASC,EAAgBH,QAQpCI,EAtDf,YAMgB,IALd4D,EAKa,EALbA,WACAnE,EAIa,EAJbA,QACAsF,EAGa,EAHbA,QACAH,EAEa,EAFbA,cACAI,EACa,EADbA,aACAF,EAAa,EAAbA,UACAL,qBAAU,WACRO,GAAa,GAETJ,IACFpB,IAAiBY,MAAK,SAACC,GACrBT,EAAWS,GACXY,YAAW,WACTD,GAAa,KALH,SAQdD,OAED,CAACnB,EAAYmB,EAASC,EAAcJ,IAEvC,IAAMM,EACJ,6BACE,kBAAC,EAAD,CAAS5G,KAAK,WACd,kBAAC,EAAD,CAAOD,MAAQoB,EAAUsD,OAAO,aAIpC,OACE,yBAAKzB,GAAG,UAAUL,UAAU,aAC1B,kBAAC,EAAD,CAAQW,MAAM,mBAAmBC,WAAS,IACzCiD,EAAY,kBAAC,EAAD,MAAkBI,EAC/B,kBAAC,EAAD,UCpCSC,EARO,uCAAG,WAAOC,GAAP,mBAAAnH,EAAA,6DACjBmB,EADiB,yBACYgG,EADZ,iDAEWlH,MAAMkB,GAFjB,cAEjBiG,EAFiB,gBAGGA,EAAoBjH,OAHvB,UAGjBkH,EAHiB,OAIT,SAAVF,EAJmB,yCAIME,EAAYtG,MAAMH,KAAI,SAACwD,GAAD,OAAUA,EAAKkD,kBAJ3C,gCAKhBD,EAAY1G,OAAOC,KAAI,SAACwD,GAAD,OAAUA,EAAKmD,mBALtB,4CAAH,sDC2DtB,IAUexF,cAAQ,MAVI,SAACF,GAAD,MAAe,CACxC2D,aAAc,SAACzF,GAAD,OAAS8B,EAASD,EAAY7B,KAC5CyH,WAAY,kBAAM3F,EdTY,CAAExB,KC5CR,mBa6DX0B,EA3Df,YAAoD,IAA7ByD,EAA4B,EAA5BA,aAAcgC,EAAc,EAAdA,WAAc,EACXnF,mBAAS,IADE,mBAC1CgF,EAD0C,KAC7BI,EAD6B,KAE3CtF,EAAWC,cACX+E,EAAQhF,EAASI,SAASmF,SAAS,WAAa,OAAS,WACzDrH,EAAO8B,EAASI,SAASmF,SAAS,WAAa,UAAY,UAiBjE,OAfAlB,qBAAU,YACY,uCAAG,8BAAAxG,EAAA,6DACf2H,EAAiB,GADF,SAEQT,EAAiBC,GAFzB,OAEfS,EAFe,OAGrBH,EAAeG,EAAe7C,MAAM,EAAG4C,IAHlB,2CAAH,qDAKpBE,KACC,CAACV,IASF,yBAAKnE,UAAU,eACb,kBAAC,EAAD,CAAQW,MAAM,0BACd,6BAASX,UAAU,SAChBqE,EAAYzG,KAAI,SAACkH,EAAYzD,GAAb,OACf,kBAAC,IAAD,CAAMP,GAAE,WAAOzD,GAAS2E,IAAMX,GAC5B,4BACEhE,KAAK,SACLkD,QAAU,kBAdF,SAACuE,GACnBN,IACA,IAAMzH,EAAG,yBAAqBoH,EAArB,6CAA+DW,GACxEtC,EAAazF,GAWa8D,CAAYiE,IAC5B9E,UAAU,UAEV,yBAAKC,cAAA,UAAiBoB,EAAjB,oBAA2CrB,UAAU,QACxD,yBACEe,IAAG,yBAAqBoD,EAArB,qCAAuDW,EAAvD,cACH7D,IAAM6D,EACN7E,cAAA,UAAiBoB,EAAjB,eAEF,uBAAGpB,cAAA,UAAiBoB,EAAjB,eAAsCyD,UAMnD,kBAAC,EAAD,UCtDOC,EAAU,uCAAG,8BAAA/H,EAAA,4DACP,0DADO,SAEFC,MADL,2DADO,cAElBQ,EAFkB,gBAGDA,EAAQN,OAHP,cAGlBO,EAHkB,yBAKjBA,EAASK,MAAMH,KAAI,qBAAGoH,YALL,2CAAH,qDAQVC,EAAW,uCAAG,WAAOC,GAAP,mBAAAlI,EAAA,6DACnBmB,EADmB,+DACgD+G,GADhD,SAEHjI,MAAMkB,GAFH,cAEnBV,EAFmB,gBAGFA,EAAQN,OAHN,cAGnBO,EAHmB,yBAKlBA,EAASK,OALS,2CAAH,sD,MCgEToH,MA9Df,WAAkB,IAAD,EACW9F,mBAAS,IADpB,mBACR+F,EADQ,KACDC,EADC,OAEehG,mBAAS,IAFxB,mBAERb,EAFQ,KAECwE,EAFD,KAef,OAXAQ,qBAAU,WACRuB,IAAa5B,MAAK,SAACC,GAAD,OAAUiC,EAASjC,MACrCd,IAAaa,MAAK,SAACC,GAAD,OAAUJ,EAAWI,QACtC,IASD,6BACE,kBAAC,EAAD,CAAQzC,MAAM,kBAAkBC,WAAS,IACzC,0BAAMZ,UAAU,SACd,iCACE,4BACEC,cAAY,2BACZC,SAbW,SAAC,GAA2B,IAAfJ,EAAc,EAAxBF,OAAUE,MAChCmF,EAAYnF,GAAOqD,MAAK,SAACC,GAAD,OAAUJ,EAAWI,QAcrC,4BAAQnD,cAAY,aAAaH,MAAM,OAAvC,OAGCsF,EAAMxH,KAAI,SAACsH,EAAM7D,GAAP,OACT,4BAAQpB,cAAA,UAAiBiF,EAAjB,WAAiClD,IAAMX,EAAQvB,MAAQoF,GAC5DA,QAKT,6BAASlF,UAAU,SAChBxB,EACEuD,MAAM,EAvBM,IAwBZnE,KAAI,WAAoCyD,GAApC,IAAGiE,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,OAA1B,OACH,kBAAC,IAAD,CACEvF,cAAA,UAAiBoB,EAAjB,gBACAW,IAAMX,EACNP,GAAE,mBAAe0E,IAEjB,yBAAKxF,UAAU,QACb,yBACEC,cAAA,UAAiBoB,EAAjB,aACAN,IAAMwE,EACNtE,IAAI,SAEN,uBAAGhB,cAAA,UAAiBoB,EAAjB,cAAqCrB,UAAU,QAC/CsF,UAOf,kBAAC,EAAD,Q,0BCoESG,OAjIf,WAAiB,IAAD,EACwBpG,mBAAS,IADjC,mBACPqG,EADO,KACMC,EADN,OAEgCtG,mBAAS,IAFzC,mBAEPuG,EAFO,KAEUC,EAFV,OAGsBxG,mBAAS,IAH/B,mBAGPyG,EAHO,KAGKC,EAHL,KAKdvC,qBAAU,WACR,IAAMhF,EAAUwH,KAAKC,MAAMC,aAAaC,QAAQ,gBAC5C3H,IACFmH,EAAenH,GACfqH,EAAmBrH,MAEpB,IAEH,IAAMiB,EAAS,SAAC,GAA0B,IAAdI,EAAa,EAAvBD,OAAUC,KACpBuG,EAAWV,EAAYjG,QAAO,SAAC4G,GAAD,OAAYA,EAAOhJ,KAAKqH,SAAS7E,MACrEgG,EAAmBO,IAGfE,EAAQ,uCAAG,WAAOjG,EAAIhD,GAAX,eAAAL,EAAA,6DACTuJ,EADS,gCACuBlJ,EADvB,aACgCgD,GAC/C0F,EAAc1F,GAFC,kBAGRmG,UAAUC,UAAUC,UAAUH,IAHtB,2CAAH,wDAMd,OACE,yBAAKvG,UAAU,gBACb,kBAAC,EAAD,CAAQW,MAAM,oBACd,8BACE,6BAASX,UAAU,WACjB,4BACEA,UAAU,SACVC,cAAY,oBACZ5C,KAAK,SACLwC,KAAK,GACLU,QAAUd,GALZ,OASA,4BACEO,UAAU,SACVC,cAAY,qBACZ5C,KAAK,SACLwC,KAAK,SACLU,QAAUd,GALZ,QASA,4BACEO,UAAU,SACVC,cAAY,sBACZ5C,KAAK,SACLwC,KAAK,SACLU,QAAUd,GALZ,WAWF,6BAASO,UAAU,SAChB4F,EAAgBhI,KAAI,SAACyI,EAAQhF,GAAT,OACnB,yBAAKW,IAAMX,EAAQrB,UAAU,aAC3B,8BACE,kBAAC,IAAD,CAAMc,GAAE,WAAOuF,EAAOhJ,KAAd,aAAuBgJ,EAAOhG,KACpC,yBACEL,UAAU,QACVe,IAAMsF,EAAOM,MACb1F,IAAI,SACJhB,cAAA,UAAiBoB,EAAjB,yBAIN,0BAAMrB,UAAU,QACd,yBAAKA,UAAU,YACb,uBACEA,UAAU,WACVC,cAAA,UAAiBoB,EAAjB,yBAEiB,WAAhBgF,EAAOhJ,KAAP,UACMgJ,EAAOnB,KADb,cACuBmB,EAAOnI,UAC3BmI,EAAOO,gBAEb,4BACEvJ,KAAK,SACLkD,QAAU,kBAAM+F,EAASD,EAAOhG,GAAIgG,EAAOhJ,QAE3C,yBACE2C,UAAU,YACVe,IAAM8F,KACN5F,IAAI,QACJhB,cAAA,UAAiBoB,EAAjB,4BAGHgF,EAAOhG,KAAOyF,GACb,uBAAG9F,UAAU,eAAb,kBAGJ,kBAAC,IAAD,CAAMc,GAAE,WAAOuF,EAAOhJ,KAAd,aAAuBgJ,EAAOhG,KACpC,wBAAIL,UAAU,OAAOC,cAAA,UAAiBoB,EAAjB,qBAClBgF,EAAOxG,OAGZ,uBACEG,UAAU,OACVC,cAAA,UAAiBoB,EAAjB,0BAFF,oBAIgBgF,EAAOS,WAEN,OAAhBT,EAAOU,MACN,yBAAK/G,UAAU,QACZqG,EAAOU,KAAKhF,MAAM,EAAG,GAAGnE,KAAI,SAACoJ,EAAKC,GAAN,OAC3B,0BACEjH,UAAU,MACVgC,IAAMiF,EACNhH,cAAA,UAAiBoB,EAAjB,YAA0B2F,EAA1B,oBAECA,gB,0BCoBVE,OAtIf,WAAsB,IAAD,EAC2B7H,mBAAS,IADpC,mBACZ8H,EADY,KACKC,EADL,OAE2B/H,mBAAS,IAFpC,mBAEZuG,EAFY,KAEKC,EAFL,OAGiBxG,mBAAS,IAH1B,mBAGZyG,EAHY,KAGAC,EAHA,OAIa1G,mBAAS,IAJtB,mBAIZgI,EAJY,KAIFC,EAJE,KAMb7H,EAAS,SAAC,GAA0B,IAAdI,EAAa,EAAvBD,OAAUC,KACpBuG,EAAWe,EAAgB1H,QAAO,SAAC4G,GAAD,OAAYA,EAAOhJ,KAAKqH,SAAS7E,MACzEgG,EAAmBO,GACnBkB,EAAYzH,IAGRyG,EAAQ,uCAAG,WAAOjG,EAAIhD,GAAX,eAAAL,EAAA,6DACTuJ,EADS,gCACuBlJ,EADvB,aACgCgD,GAC/C0F,EAAc1F,GAFC,kBAGRmG,UAAUC,UAAUC,UAAUH,IAHtB,2CAAH,wDAuBd,OANA/C,qBAAU,WACR,IAAM+D,EAAqBvB,KAAKC,MAAMC,aAAaC,QAAQ,oBAC3DiB,EAAmBG,GACnB1B,EAAmB0B,KAClB,IAGD,yBAAKvH,UAAU,aACb,kBAAC,EAAD,CAAQW,MAAM,uBACd,8BACE,6BAASX,UAAU,WACjB,4BACEA,UAAU,SACVC,cAAY,oBACZ5C,KAAK,SACLwC,KAAK,GACLU,QAAUd,GALZ,OASA,4BACEO,UAAU,SACVC,cAAY,qBACZ5C,KAAK,SACLwC,KAAK,SACLU,QAAUd,GALZ,QASA,4BACEO,UAAU,SACVC,cAAY,sBACZ5C,KAAK,SACLwC,KAAK,SACLU,QAAUd,GALZ,WAWF,6BAASO,UAAU,SAChB4F,GAAmBA,EAAgBhI,KAAI,SAACyI,EAAQhF,GAAT,OACtC,yBAAKW,IAAMX,EAAQrB,UAAU,iBAC3B,8BACE,kBAAC,IAAD,CAAMc,GAAE,WAAOuF,EAAOhJ,KAAd,aAAuBgJ,EAAOhG,KACpC,yBACEL,UAAU,QACVe,IAAMsF,EAAOM,MACb1F,IAAI,SACJhB,cAAA,UAAiBoB,EAAjB,yBAIN,0BAAMrB,UAAU,QACd,yBAAKA,UAAU,YACb,uBACEA,UAAU,WACVC,cAAA,UAAiBoB,EAAjB,yBAEiB,WAAhBgF,EAAOhJ,KAAP,UACMgJ,EAAOnB,KADb,cACuBmB,EAAOnI,UAC3BmI,EAAOO,gBAEb,kBAAC,IAAD,CAAM9F,GAAE,WAAOuF,EAAOhJ,KAAd,aAAuBgJ,EAAOhG,KACpC,wBAAIL,UAAU,OAAOC,cAAA,UAAiBoB,EAAjB,qBAClBgF,EAAOxG,QAId,yBAAKG,UAAU,WACb,4BACE3C,KAAK,SACLkD,QAAU,kBAAM+F,EAASD,EAAOhG,GAAIgG,EAAOhJ,QAE3C,yBACE2C,UAAU,YACVe,IAAM8F,KACN5F,IAAI,QACJhB,cAAA,UAAiBoB,EAAjB,4BAGJ,4BACEhE,KAAK,SACLkD,QAAU,kBA9FZ,SAACiH,GACf,IAAMC,EAAeN,EAClB1H,QAAO,SAACiI,GAAD,OAAcA,EAASrH,KAAOmH,EAAcnH,MACnDZ,QAAO,SAACiI,GAAD,OAAcA,EAAS7H,OAAS2H,EAAc3H,QACxDuH,EAAmBK,GACnB,IAAME,EAAcF,EACjBhI,QAAO,SAAC4G,GAAD,OAAYA,EAAOhJ,KAAKqH,SAAS2C,MAC3CxB,EAAmB8B,GACnBzB,aAAa0B,QAAQ,kBAAmB5B,KAAK6B,UAAUJ,IAsFvBK,CAAQzB,KAExB,yBACErG,UAAU,eACVe,IAAMgH,KACN9G,IAAI,UACJhB,cAAA,UAAiBoB,EAAjB,gCAILgF,EAAOhG,KAAOyF,GACb,uBAAG9F,UAAU,eAAb,0B,MCrEHgI,OAvDf,WAAoB,IAAD,EACS3I,mBAAS,IADlB,mBACV4I,EADU,KACHC,EADG,KAYjB,OATA1E,qBAAU,WACR,IAAM2E,EAAWnC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CgC,GAAUD,EAASC,EAASF,SAC/B,IAOD,yBAAKjI,UAAU,WACb,kBAAC,EAAD,CAAQW,MAAM,WACd,8BACE,wBAAIX,UAAU,QAAQC,cAAY,iBAC/BgI,GAEH,yBAAKjI,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,OAAOc,GAAG,oBACxB,4BACEb,cAAY,mBACZD,UAAU,SACV3C,KAAK,UAHP,oBAQF,kBAAC,IAAD,CAAM2C,UAAU,OAAOc,GAAG,uBACxB,4BACEb,cAAY,uBACZD,UAAU,SACV3C,KAAK,UAHP,uBAQF,kBAAC,IAAD,CAAM2C,UAAU,OAAOc,GAAG,KACxB,4BACEb,cAAY,qBACZD,UAAU,SACV3C,KAAK,SACLkD,QAnCQ,WAClB2F,aAAakC,UA8BL,WAWN,kBAAC,EAAD,Q,MCrBSC,OA7Bf,WACE,OACE,6BACE,kBAAC,EAAD,CAAQ1H,MAAM,aACd,yBAAKX,UAAU,WACb,kBAAC,IAAD,CAAMc,GAAG,qBACP,4BACEd,UAAU,SACV3C,KAAK,SACL4C,cAAY,gBAHd,qBAQF,kBAAC,IAAD,CAAMa,GAAG,qBACP,4BACEd,UAAU,SACV3C,KAAK,SACL4C,cAAY,kBAHd,sBASJ,kBAAC,EAAD,QCISiH,OA7Bf,WACE,OACE,6BACE,kBAAC,EAAD,CAAQvG,MAAM,qBACd,yBAAKX,UAAU,WACb,kBAAC,IAAD,CAAMc,GAAG,kCACP,4BACEzD,KAAK,SACL4C,cAAY,wBACZD,UAAU,UAHZ,qBAQF,kBAAC,IAAD,CAAMc,GAAG,mBACP,4BACEzD,KAAK,SACL4C,cAAY,mBACZD,UAAU,UAHZ,oBASJ,kBAAC,EAAD,QCcSkH,OAtCf,WACE,OACE,6BACE,kBAAC,EAAD,CAAQvG,MAAM,qBACd,yBAAKX,UAAU,WACb,kBAAC,IAAD,CAAMc,GAAG,kCACP,4BACEzD,KAAK,SACL4C,cAAY,wBACZD,UAAU,UAHZ,qBAQF,kBAAC,IAAD,CAAMc,GAAG,0BACP,4BACEzD,KAAK,SACL4C,cAAY,kBACZD,UAAU,UAHZ,wBAQF,kBAAC,IAAD,CAAMc,GAAG,kBACP,4BACEzD,KAAK,SACL4C,cAAY,mBACZD,UAAU,UAHZ,oBASJ,kBAAC,EAAD,Q,yDC4CSsI,OA5Ef,YAA8B,IAAXjC,EAAU,EAAVA,OAAU,EACHhH,oBAAS,GADN,mBACpBkJ,EADoB,KACdC,EADc,OAEmBnJ,mBAAS,IAF5B,mBAEpB8H,EAFoB,KAEHC,EAFG,KAIrB/J,EADW+B,cACKG,SAASmF,SAAS,WAAa,SAAW,SAC1D+D,EAAwB,WAATpL,EACjB,CACAgD,GAAIgG,EAAOb,OACXnI,KAAM,SACN6H,KAAMmB,EAAOrB,QACb9G,SAAUmI,EAAOxI,YACjB+I,eAAgB,GAChB/G,KAAMwG,EAAOf,QACbqB,MAAON,EAAOd,cAEd,CACAlF,GAAIgG,EAAOqC,QACXrL,KAAM,SACN6H,KAAM,GACNhH,SAAUmI,EAAOxI,YACjB+I,eAAgBP,EAAOsC,aACvB9I,KAAMwG,EAAOuC,SACbjC,MAAON,EAAOwC,eAoClB,OAjCArF,qBAAU,YACW,WACjB,IAAMsF,EAAe9C,KAAKC,MAAMC,aAAaC,QAAQ,oBACjD2C,IACcA,EACbC,MAAK,SAACC,GAAD,OAAWA,EAAM3L,OAASA,GAAQ2L,EAAM3I,KAAOoI,EAAapI,OACvDmI,GAAQ,IAEvBpB,EAAmB0B,GAErBG,KACC,CAACR,EAAapI,GAAIhD,IAuBnB,6BACE,4BACEA,KAAK,SACL4C,cAAY,eACZM,QAzBa,WACjB,OAAQgI,GACR,KAAK,EACH,IAAMW,EAAM,uBAAO/B,GAAmB,IAA1B,CAA8BsB,IAC1CvC,aAAa0B,QAAQ,kBAAmB5B,KAAK6B,UAAUqB,IACvD9B,EAAmB8B,GACnB,MAEF,QACE,IAAMA,EAAS/B,EACZ1H,QAAO,SAACiI,GAAD,OAAcA,EAASrH,KAAOoI,EAAapI,MAClDZ,QAAO,SAACiI,GAAD,OAAcA,EAAS7H,OAAS4I,EAAa5I,QACvDqG,aAAa0B,QAAQ,kBAAmB5B,KAAK6B,UAAUqB,IACvD9B,EAAmB8B,GAIrBV,GAASD,IASLxH,IAAMwH,EAAOR,KAAiBoB,MAE9B,yBAAKpI,IAAMwH,EAAOR,KAAiBoB,KAAiBlI,IAAI,uBC+CjDmI,OA7Gf,YAAyE,IAAjD/C,EAAgD,EAAhDA,OAAQgD,EAAwC,EAAxCA,kBAAmBxI,EAAqB,EAArBA,YAAayI,EAAQ,EAARA,KAAQ,EAClCjK,mBAAS,IADyB,mBAC/DkK,EAD+D,KACnDC,EADmD,OAE5BnK,mBAAS,IAFmB,mBAE/DoK,EAF+D,KAEhDC,EAFgD,OAG9BrK,oBAAS,GAHqB,mBAG/DsK,EAH+D,KAGjDC,EAHiD,KAIhEzK,EAAWC,cACTwJ,EAA2DvC,EAA3DuC,SAAUC,EAAiDxC,EAAjDwC,cAAeF,EAAkCtC,EAAlCsC,aAAckB,EAAoBxD,EAApBwD,gBAQ/CrG,qBAAU,WAeRlB,IAAaa,MAAK,SAACC,GAAD,OAAUoG,EAAcpG,EAAKrB,MAAM,EADrC,OAbO,WACrB,IAAMsC,EAAc,GACdyF,EAAWxM,OAAOC,KAAK8I,GAC1B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,oBAC5BqF,EAAazM,OAAOC,KAAK8I,GAC5B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,iBAClCoF,EAASE,SAAQ,SAAC5I,EAAMC,GACD,OAAjBgF,EAAOjF,IAAmC,KAAjBiF,EAAOjF,IAClCiD,EAAY4F,KAAK,CAAEpK,KAAMwG,EAAOjF,GAAO8I,SAAU7D,EAAO0D,EAAW1I,SAGvEqI,EAAiBrF,GAInBQ,KACC,CAACwB,IAEJ,IAaM8D,EAAQ,uCAAG,4BAAAnN,EAAA,6DACTuJ,EADS,+BACsBpH,EAASI,UAC9CqK,GAAgB,GAFD,kBAGRpD,UAAUC,UAAUC,UAAUH,IAHtB,2CAAH,qDAMd,OACE,yBAAKvG,UAAU,WACb,yBACEe,IAAM8H,EACN5H,IAAM2H,EACN3I,cAAY,iBAEd,yBAAKD,UAAU,cACb,6BACE,wBAAIC,cAAY,gBAAgB2I,GAChC,wBAAI3I,cAAY,mBAAmB0I,IAErC,6BACE,4BAAQtL,KAAK,SAAS4C,cAAY,YAAYM,QAAU4J,GACtD,yBAAKpJ,IAAM8F,KAAY5F,IAAI,kBAE7B,kBAAC,GAAD,CAASoF,OAASA,IACjBsD,GAAgB,8CAGrB,yBAAK3J,UAAU,eACb,2CACA,6BACGyJ,EAAc7L,KAAI,WAAqByD,GAArB,IAAGxB,EAAH,EAAGA,KAAMqK,EAAT,EAASA,SAAT,OACjB,uBACElI,IAAMoI,KAAKC,SACXpK,cAAA,UAAiBoB,EAAjB,iCAFF,UAIMxB,EAJN,cAIgBqK,SAItB,yBAAKlK,UAAU,gBACb,4CACA,uBAAGC,cAAY,gBAAgB4J,IAEjC,yBAAK7J,UAAU,kBACb,0CACA,kBAAC,KAAD,CAAUsK,WAnFG,CACjBC,OAAQ,CACNC,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BtN,MAAO,KAiFFmM,EAAW3L,KAAI,SAACwD,EAAMC,GAAP,OAAkB,kBAAC,EAAD,CAChCC,WAAU,UAAMD,EAAN,uBACVE,YAAW,UAAMF,EAAN,wBACXW,IAAMX,EACND,KAAOA,EACPC,MAAQA,EACRhE,KAAK,kBAITiM,GAnEJ,kBAAC,IAAD,CAAMxI,GAAE,UAAM3B,EAASI,SAAf,iBACN,4BACElC,KAAK,SACL4C,cAAY,mBACZD,UAAU,mBACVO,QAAUM,GAEPwI,EAAwC,oBAApB,sBCyFhBsB,OAjIf,YAAwE,IAAjDtE,EAAgD,EAAhDA,OAAQgD,EAAwC,EAAxCA,kBAAmBxI,EAAqB,EAArBA,YAAayI,EAAQ,EAARA,KAAQ,EACjCjK,mBAAS,IADwB,mBAC9DkK,EAD8D,KAClDC,EADkD,OAE3BnK,mBAAS,IAFkB,mBAE9DoK,EAF8D,KAE/CC,EAF+C,OAG7BrK,oBAAS,GAHoB,mBAG9DsK,EAH8D,KAGhDC,EAHgD,KAI/DzK,EAAWC,cAEfkG,EAKEe,EALFf,QACAC,EAIEc,EAJFd,aACA1H,EAGEwI,EAHFxI,YACAgM,EAEExD,EAFFwD,gBACAe,EACEvE,EADFuE,WAEIC,EAAUD,EACZA,EAAWE,MAAM,oCAAoC,GACrD,GAQJtH,qBAAU,WAkBRjB,IAAiBY,MAAK,SAACC,GAAD,OAAUoG,EAAcpG,EAAKrB,MAAM,EADzC,OAhBO,WACrB,IAAMsC,EAAc,GACdyF,EAAWxM,OAAOC,KAAK8I,GAC1B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,oBAC5BqF,EAAazM,OAAOC,KAAK8I,GAC5B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,iBAClCoF,EAASE,SAAQ,SAAC5I,EAAMC,GACD,OAAjBgF,EAAOjF,IAAmC,KAAjBiF,EAAOjF,IAClCiD,EAAY4F,KAAK,CACfpK,KAAMwG,EAAOjF,GACb8I,SAAU7D,EAAO0D,EAAW1I,SAIlCqI,EAAiBrF,GAInBQ,KACC,CAACwB,IAEJ,IAaM8D,EAAQ,uCAAG,4BAAAnN,EAAA,6DACTuJ,EADS,+BACsBpH,EAASI,UAC9CqK,GAAgB,GAFD,kBAGRpD,UAAUC,UAAUC,UAAUH,IAHtB,2CAAH,qDAMd,OACE,yBAAKvG,UAAU,WACb,yBAAKe,IAAMwE,EAAetE,IAAMqE,EAAUrF,cAAY,iBACtD,yBAAKD,UAAU,cACb,6BACE,wBAAIC,cAAY,gBAAgBqF,GAChC,wBAAIrF,cAAY,mBAAmBpC,IAErC,6BACE,4BAAQR,KAAK,SAAS4C,cAAY,YAAYM,QAAU4J,GACtD,yBAAKpJ,IAAM8F,KAAY5F,IAAI,kBAE7B,kBAAC,GAAD,CAASoF,OAASA,IACjBsD,GAAgB,8CAGrB,yBAAK3J,UAAU,eACb,2CACA,6BACGyJ,EAAc7L,KAAI,WAAqByD,GAArB,IAAGxB,EAAH,EAAGA,KAAMqK,EAAT,EAASA,SAAT,OACjB,uBACElI,IAAMoI,KAAKC,SACXpK,cAAA,UAAiBoB,EAAjB,iCAFF,YAIQxB,EAJR,cAIkBqK,SAKxB,yBAAKlK,UAAU,gBACb,4CACA,uBAAGC,cAAY,gBAAgB4J,IAEjC,yBAAK7J,UAAU,SACb,qCACA,4BACEe,IAAG,wCAAoC8J,GACvClK,MAAM,QACNoK,YAAY,IACZ9K,cAAY,WAGhB,yBAAKD,UAAU,kBACb,0CACA,kBAAC,KAAD,CAAUsK,WA5FG,CACjBC,OAAQ,CACNC,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BtN,MAAO,KA0FFmM,EAAW3L,KAAI,SAACwD,EAAMC,GAAP,OACd,kBAAC,EAAD,CACEC,WAAU,UAAMD,EAAN,uBACVE,YAAW,UAAMF,EAAN,wBACXW,IAAMX,EACND,KAAOA,EACPC,MAAQA,EACRhE,KAAK,kBAKXiM,GA3EJ,kBAAC,IAAD,CAAMxI,GAAE,UAAM3B,EAASI,SAAf,iBACN,4BACElC,KAAK,SACL4C,cAAY,mBACZD,UAAU,mBACVO,QAAUM,GAERwI,EAAwC,oBAApB,sBCtDf2B,OANf,WACE,OACE,yBAAKhL,UAAU,eAAee,IAAI,8CAA8CE,IAAI,U,MC4ExF,IASelC,eAAQ,MATI,SAACF,GAAD,MAAe,CACxCI,oBAAqB,SAACN,GAAD,OAAUE,EAASH,EAA0BC,QAQrDI,EA9Ef,YAAsE,IAAhCsB,EAA+B,EAAlD4K,MAASC,OAAU7K,GAAQpB,EAAuB,EAAvBA,oBAAuB,EACvCI,mBAAS,IAD8B,mBAC5DgH,EAD4D,KACpD8E,EADoD,OAErC9L,oBAAS,GAF4B,mBAE5D+L,EAF4D,KAEnDC,EAFmD,OAGjBhM,oBAAS,GAHQ,mBAG5DgK,EAH4D,KAGzCiC,EAHyC,OAI3CjM,oBAAS,GAJkC,mBAI5DiK,EAJ4D,KAItDiC,EAJsD,KAM7DzJ,EADe1C,cAAbG,SACiBmF,SAAS,UAAa,QAAU,YAEzDlB,qBAAU,WAiBRf,EAAmBX,EAAQzB,GACxB8C,MAAK,SAACC,GACL+H,EAAU/H,GACViI,GAAW,GAnBc,WAC3B,IAAIG,EAAaxF,KAAKC,MAAMC,aAAaC,QAAQ,sBACjD,IAAKqF,EAAY,OAAO,KACxBA,EAAaA,EAAW1J,GACxB0J,EAAalO,OAAOC,KAAKiO,GACzBF,EAAqBE,EAAWzC,MAAK,SAAC3H,GAAD,OAAUA,IAASf,MAetDoL,GAZqB,WACvB,IAAMC,EAASxF,aAAaC,QAAQ,eACpC,GAAIuF,EAAQ,CACV,IAAMC,EAAW3F,KAAKC,MAAMyF,GAAQE,MAAK,SAACxK,GAAD,OAAUA,EAAKf,KAAOA,KAC/DkL,EAAQI,IASRE,GACA5M,GAAoB,QAEvB,CAACoB,EAAIyB,EAAQ7C,IAEhB,IAAM4B,EAAc,WAClB,IAAMiL,EAAgB9F,KAAKC,MAAMC,aAAaC,QAAQ,sBACtD,GAAK2F,EAOHA,EAAchK,GAAQzB,GAAM,GAC5B6F,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAUiE,QARvC,CAClB,IAAMN,EAAa,CAAEO,UAAW,GAAIhO,MAAO,IAC3CyN,EAAW1J,GAAX,eACGzB,EAAK,IAER6F,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAU2D,IAK3DH,GAAW,IAGb,OACE,6BACGD,GAAW,kBAAC,GAAD,OACVA,GAAsB,UAAXtJ,GAAsB,kBAAC,GAAD,CACjCuE,OAASA,EACTxF,YAAcA,EACdwI,kBAAoBA,EACpBC,KAAOA,KAEP8B,GAAsB,cAAXtJ,GAA0B,kBAAC,GAAD,CACrCuE,OAASA,EACTxF,YAAcA,EACdwI,kBAAoBA,EACpBC,KAAOA,Q,0BCqBA0C,OA1Ff,WAAkB,IAAD,EACW3M,mBAAS,CACjC4M,MAAO,GACPC,cAAc,EACdC,SAAU,GACVC,iBAAiB,IALJ,mBACR3K,EADQ,KACD4K,EADC,OAQ6BhN,oBAAS,GARtC,mBAQRiN,EARQ,KAQQC,EARR,KAgCT5M,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtCuM,EAAS,2BACJ5K,GADG,kBAEL5B,EAAOC,MAeZ,OACE,yBAAKE,UAAU,SACb,yBAAKe,IAAMyL,KAAOvL,IAAI,YACtB,0BAAMjB,UAAU,QACd,qCACA,2BACEA,UAAU,QACV3C,KAAK,QACL4C,cAAY,cACZE,YAAY,QACZN,KAAK,QACLK,SAAWP,EACX8M,QApDY,WACC,IAAIC,OACrB,kDAEaC,KAAKlL,EAAMwK,QACxBI,EAAS,2BACJ5K,GADG,IAENyK,cAAc,MA8CZpM,MAAQ2B,EAAMwK,QAEhB,2BACEjM,UAAU,QACV3C,KAAK,WACL4C,cAAY,iBACZE,YAAY,QACZN,KAAK,WACLK,SAAWP,EACX8M,QAlDe,WAEjBhL,EAAM0K,SAAS3L,OADD,GAEhB6L,EAAS,2BACJ5K,GADG,IAEN2K,iBAAiB,MA8CftM,MAAQ2B,EAAM0K,WAEhB,4BACEnM,UAAU,SACV3C,KAAK,SACL4C,cAAY,mBACZ2M,UAAYnL,EAAMyK,eAAiBzK,EAAM2K,gBACzC7L,QAzCY,WAClB,IACMsM,EAAW,CACf5E,MAAOxG,EAAMwK,OAEf/F,aAAa0B,QAAQ,aAJD,GAKpB1B,aAAa0B,QAAQ,iBALD,GAMpB1B,aAAa0B,QAAQ,OAAQ5B,KAAK6B,UAAUgF,IAC5CN,GAAkB,KA4Bd,WAUDD,EAAiB,kBAAC,IAAD,CAAUxL,GAAG,aAAgB,OC0GtCgM,OA5Lf,WAA2B,IAAD,EACkBzN,mBAAS,IAD3B,mBACjBoK,EADiB,KACFC,EADE,OAEgBrK,oBAAS,GAFzB,mBAEjBsK,EAFiB,KAEHC,EAFG,OAGIvK,mBAAS,IAHb,mBAGjBgH,EAHiB,KAGT8E,EAHS,OAIU9L,mBAAS,IAJnB,mBAIjB0N,EAJiB,KAIPC,EAJO,KAKlB7N,EAAWC,cAEfkG,EAMEe,EANFf,QACAC,EAKEc,EALFd,aACA1H,EAIEwI,EAJFxI,YACAgM,EAGExD,EAHFwD,gBACA7E,EAEEqB,EAFFrB,QACAiI,EACE5G,EADF4G,QAEIC,EAAW/N,EAASI,SAASuL,MAAM,KAAK,GASxCqC,EAPkB,WACtB,IAAMC,EAAapH,KAAKC,MAAMC,aAAaC,QAAQ,sBACnD,OAAmB,OAAfiH,EACaA,EAAWrP,MAAMmP,GAEzB,GAEaG,GAExB7J,qBAAU,WACRf,EAAmB,QAASyK,GAAU/J,MAAK,SAACC,GAAD,OAAU+H,EAAU/H,QAC9D,CAAC8J,IAEJ1J,qBAAU,YACe,WACrB,IAAMa,EAAc,GACdmH,EAAa,GACb1B,EAAWxM,OAAOC,KAAK8I,GAC1B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,oBAC5BqF,EAAazM,OAAOC,KAAK8I,GAC5B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,iBAClCoF,EAASE,SAAQ,SAAC5I,EAAMC,GACtB,GAAqB,OAAjBgF,EAAOjF,IAAmC,KAAjBiF,EAAOjF,GAAc,CAChD,IAAMkM,EAAgBH,EAAgBzI,SAAS2B,EAAOjF,IACtDiD,EAAY4F,KAAK,CACfpK,KAAMwG,EAAOjF,GACb8I,SAAU7D,EAAO0D,EAAW1I,MAE9BmK,EAAWnF,EAAOjF,IAASkM,MAG/BN,EAAcxB,GACd9B,EAAiBrF,GAEnBQ,KACC,CAACqI,EAAU7G,IAEd,IAAMkH,EAAajQ,OAAOkQ,OAAOT,GAAUU,OAAM,SAACC,GAAD,OAAmB,IAATA,KAErD7M,EAAc,WAClB,IAAM8M,EAAmB,GADD,GAEI,IAAIC,MAAOC,mBAAmB,SAAS/C,MAAM,KAFjD,mBAEjBgD,EAFiB,KAEVC,EAFU,KAEJC,EAFI,KAGlBC,EAAa,CACjB5N,GAAI6M,EACJ7P,KAAM,SACN6H,KAAMF,EACN9G,SAAUL,EACV+I,eAAgB,GAChB/G,KAAMyF,EACNqB,MAAOpB,EACPuB,SAAS,GAAD,OAAKiH,EAAL,YAAaD,EAAb,YAAsBE,GAC9BjH,KAAM,CAACkG,IAGHiB,EAAiBlI,KAAKC,MAAMC,aAAaC,QAAQ,gBAChC,OAAnB+H,GACFA,EAAejE,KAAKgE,GACpB/H,aAAa0B,QAAQ,cAAe5B,KAAK6B,UAAUqG,MAEnDP,EAAiB1D,KAAKgE,GACtB/H,aAAa0B,QAAQ,cAAe5B,KAAK6B,UAAU8F,MAiBjDhO,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBoN,EAAc,2BACTD,GADQ,kBAEVnN,EAAOS,GAAKT,EAAOU,WAGtB,IAAM6N,EAAmBnI,KAAKC,MAAMC,aAAaC,QAAQ,sBAEzD,GAAyB,OAArBgI,EAA2B,CAC7B,IAAMC,EAAmBD,EAAiBpQ,MAAMmP,GAC1CxI,EAAW0J,EAAiB1J,SAAS9E,EAAOS,IAC5CgO,EAAaD,EAAiBE,QAAQ1O,EAAOS,IAEnD,OAAQqE,GACR,KAAK,EACH0J,EAAiBnE,KAAKrK,EAAOS,IAC7B6F,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAUsG,IACzD,MACF,QACEC,EAAiBG,OAAOF,EAAY,GACpCnI,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAUsG,SAGtD,CACL,IAAMK,EAAc,CAClBzC,UAAW,GACXhO,MAAM,eACHmP,EAAW,CAACtN,EAAOS,MAGxB6F,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAU2G,MAIvDrE,EAAQ,uCAAG,gCAAAnN,EAAA,6DACTyR,EAAWtP,EAASI,SAASuL,MAAM,KACnC4D,EAAaD,EAAS,GAAGE,OAAO,IAAKF,EAAS,IAC9ClI,EAHS,gCAGuBmI,GACtC9E,GAAgB,GAJD,kBAKRpD,UAAUC,UAAUC,UAAUH,IALtB,2CAAH,qDAQd,OACE,yBAAKvG,UAAU,WACb,yBAAKe,IAAMwE,EAAetE,IAAMqE,EAAUrF,cAAY,iBACtD,yBAAKD,UAAU,cACb,6BACE,wBAAIC,cAAY,gBAAgBqF,GAChC,wBAAIrF,cAAY,mBAAmBpC,IAErC,6BACE,4BAAQR,KAAK,SAAS4C,cAAY,YAAYM,QAAU4J,GACtD,yBAAKpJ,IAAM8F,KAAY5F,IAAI,kBAE7B,kBAAC,GAAD,CAASoF,OAASA,IACjBsD,GAAgB,8CAGrB,yBAAK3J,UAAU,eACb,2CACA,6BACE,0BAAMA,UAAU,mBACbyJ,EAAc7L,KAAI,WAAqByD,GAArB,IAAGxB,EAAH,EAAGA,KAAMqK,EAAT,EAASA,SAAT,OACjB,2BACElI,IAAMnC,EACNO,QAAUP,EACVG,UAAY+M,EAASlN,GAAQ,KAAO,MACpCI,cAAA,UAAiBoB,EAAjB,qBAEA,2BACEhB,GAAKR,EACLxC,KAAK,WACL6C,SAAWP,EACXW,QAAUyM,EAASlN,KAVvB,WAYOA,EAZP,cAYiBqK,UAMzB,yBAAKlK,UAAU,+BACb,4CACA,uBAAGC,cAAY,gBAAgB4J,IAhGnC,kBAAC,IAAD,CAAM/I,GAAG,oBACP,4BACEzD,KAAK,SACL4C,cAAY,oBACZD,UAAU,mBACV4M,UAAYW,EACZhN,QAAUM,GALZ,wBC2GS+N,OA5Lf,WAA4B,IAAD,EACiBvP,mBAAS,IAD1B,mBAClBoK,EADkB,KACHC,EADG,OAEerK,oBAAS,GAFxB,mBAElBsK,EAFkB,KAEJC,EAFI,OAGGvK,mBAAS,IAHZ,mBAGlBgH,EAHkB,KAGV8E,EAHU,OAIS9L,mBAAS,IAJlB,mBAIlB0N,EAJkB,KAIRC,EAJQ,KAKnB7N,EAAWC,cAEfwJ,EAKYvC,EALZuC,SACAC,EAIYxC,EAJZwC,cACAF,EAGYtC,EAHZsC,aACAkB,EAEYxD,EAFZwD,gBACAhM,EACYwI,EADZxI,YACAoP,EAAY5G,EAAZ4G,QACIC,EAAW/N,EAASI,SAASuL,MAAM,KAAK,GASxCqC,EAPkB,WACtB,IAAMC,EAAapH,KAAKC,MAAMC,aAAaC,QAAQ,sBACnD,OAAmB,OAAfiH,EACaA,EAAWrB,UAAUmB,GAE7B,GAEaG,GAExB7J,qBAAU,WACRf,EAAmB,YAAayK,GAAU/J,MAAK,SAACC,GAAD,OAAU+H,EAAU/H,QAClE,CAAC8J,IAEJ1J,qBAAU,YACe,WACrB,IAAMa,EAAc,GACdmH,EAAa,GACb1B,EAAWxM,OAAOC,KAAK8I,GAC1B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,oBAC5BqF,EAAazM,OAAOC,KAAK8I,GAC5B5G,QAAO,SAAC2B,GAAD,OAAUA,EAAKsD,SAAS,iBAClCoF,EAASE,SAAQ,SAAC5I,EAAMC,GACtB,GAAqB,OAAjBgF,EAAOjF,IAAmC,KAAjBiF,EAAOjF,GAAc,CAChD,IAAMkM,EAAgBH,EAAgBzI,SAAS2B,EAAOjF,IACtDiD,EAAY4F,KAAK,CACfpK,KAAMwG,EAAOjF,GACb8I,SAAU7D,EAAO0D,EAAW1I,MAE9BmK,EAAWnF,EAAOjF,IAASkM,MAG/BN,EAAcxB,GACd9B,EAAiBrF,GAEnBQ,KACC,CAACqI,EAAU7G,IAEd,IAAMkH,EAAajQ,OAAOkQ,OAAOT,GAAUU,OAAM,SAACC,GAAD,OAAmB,IAATA,KAErD7M,EAAc,WAClB,IAAM8M,EAAmB,GADD,GAEI,IAAIC,MAAOC,mBAAmB,SAAS/C,MAAM,KAFjD,mBAEjBgD,EAFiB,KAEVC,EAFU,KAEJC,EAFI,KAGlBC,EAAa,CACjB5N,GAAI6M,EACJ7P,KAAM,SACN6H,KAAM,GACNhH,SAAUL,EACV+I,eAAgB+B,EAChB9I,KAAM+I,EACNjC,MAAOkC,EACP/B,SAAS,GAAD,OAAKiH,EAAL,YAAaD,EAAb,YAAsBE,GAC9BjH,KAAM,CAACkG,IAGHiB,EAAiBlI,KAAKC,MAAMC,aAAaC,QAAQ,gBAChC,OAAnB+H,GACFA,EAAejE,KAAKgE,GACpB/H,aAAa0B,QAAQ,cAAe5B,KAAK6B,UAAUqG,MAEnDP,EAAiB1D,KAAKgE,GACtB/H,aAAa0B,QAAQ,cAAe5B,KAAK6B,UAAU8F,MAkBjDhO,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBoN,EAAc,2BACTD,GADQ,kBAEVnN,EAAOS,GAAKT,EAAOU,WAGtB,IAAM6N,EAAmBnI,KAAKC,MAAMC,aAAaC,QAAQ,sBAEzD,GAAyB,OAArBgI,EAA2B,CAC7B,IAAMC,EAAmBD,EAAiBpC,UAAUmB,GAC9CxI,EAAW0J,EAAiB1J,SAAS9E,EAAOS,IAC5CgO,EAAaD,EAAiBE,QAAQ1O,EAAOS,IAEnD,OAAQqE,GACR,KAAK,EACH0J,EAAiBnE,KAAKrK,EAAOS,IAC7B6F,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAUsG,IACzD,MACF,QACEC,EAAiBG,OAAOF,EAAY,GACpCnI,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAUsG,SAGtD,CACL,IAAMK,EAAc,CAClBzC,UAAU,eACPmB,EAAW,CAACtN,EAAOS,KAEtBtC,MAAO,IAETmI,aAAa0B,QAAQ,oBAAqB5B,KAAK6B,UAAU2G,MAIvDrE,EAAQ,uCAAG,gCAAAnN,EAAA,6DACTyR,EAAWtP,EAASI,SAASuL,MAAM,KACnC4D,EAAaD,EAAS,GAAGE,OAAO,IAAKF,EAAS,IAC9ClI,EAHS,gCAGuBmI,GACtC9E,GAAgB,GAJD,kBAKRpD,UAAUC,UAAUC,UAAUH,IALtB,2CAAH,qDAQd,OACE,yBAAKvG,UAAU,WACb,yBAAKe,IAAM8H,EAAgB5H,IAAM2H,EAAW3I,cAAY,iBACxD,yBAAKD,UAAU,cACb,6BACE,wBAAIC,cAAY,gBAAgB2I,GAChC,wBAAI3I,cAAY,mBAAmB0I,IAErC,6BACE,4BAAQtL,KAAK,SAAS4C,cAAY,YAAYM,QAAU4J,GACtD,yBAAKpJ,IAAM8F,KAAY5F,IAAI,kBAE7B,kBAAC,GAAD,CAASoF,OAASA,IACjBsD,GAAgB,8CAGrB,yBAAK3J,UAAU,eACb,2CACA,6BACE,0BAAMA,UAAU,mBACbyJ,EAAc7L,KAAI,WAAqByD,GAArB,IAAGxB,EAAH,EAAGA,KAAMqK,EAAT,EAASA,SAAT,OACjB,2BACElI,IAAMnC,EACNO,QAAUP,EACVG,UAAY+M,EAASlN,GAAQ,KAAO,MACpCI,cAAA,UAAiBoB,EAAjB,qBAEA,2BACEhB,GAAKR,EACLxC,KAAK,WACL6C,SAAWP,EACXW,QAAUyM,EAASlN,KAVvB,WAYOA,EAZP,cAYiBqK,UAMzB,yBAAKlK,UAAU,+BACb,4CACA,uBAAGC,cAAY,gBAAgB4J,IAhGnC,kBAAC,IAAD,CAAM/I,GAAG,oBACP,4BACEzD,KAAK,SACL4C,cAAY,oBACZD,UAAU,mBACV4M,UAAYW,EACZhN,QAAUM,GALZ,wBCjFSgO,OANf,WACE,OACE,wBAAIC,MAAQ,CAAEC,UAAW,WAAzB,eCkDWC,OAlCf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,2BACLC,UAAYpC,KAEd,kBAAC,IAAD,CAAOmC,KAAK,2BAA2BC,UAAYN,KACnD,kBAAC,IAAD,CAAOK,KAAK,eAAeC,UAAYC,KACvC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAYE,IACnC,kBAAC,IAAD,CAAOH,KAAK,eAAeC,UAAYC,KACvC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAYG,IACnC,kBAAC,IAAD,CAAOJ,KAAK,yBAAyBC,UAAY/J,IACjD,kBAAC,IAAD,CAAO8J,KAAK,yBAAyBC,UAAYL,KACjD,kBAAC,IAAD,CACEI,KAAK,iCACLC,UAAYI,IAEd,kBAAC,IAAD,CACEL,KAAK,iCACLC,UAAYI,IAEd,kBAAC,IAAD,CAAOL,KAAK,oBAAoBC,UAAYK,KAC5C,kBAAC,IAAD,CAAON,KAAK,oBAAoBC,UAAYM,KAC5C,kBAAC,IAAD,CAAOP,KAAK,YAAYC,UAAY7G,KACpC,kBAAC,IAAD,CAAO4G,KAAK,sBAAsBC,UAAYhI,KAC9C,kBAAC,IAAD,CAAO+H,KAAK,mBAAmBC,UAAYzJ,KAC3C,kBAAC,IAAD,CAAOwJ,KAAK,UAAUC,UAAYlH,KAClC,kBAAC,IAAD,CAAOyH,OAAK,EAACR,KAAK,IAAIC,UAAYlD,KAClC,kBAAC,IAAD,CAAOkD,UAAYL,OCrCLa,QACW,cAA7BC,OAAOxQ,SAASyQ,UAEe,UAA7BD,OAAOxQ,SAASyQ,UAEhBD,OAAOxQ,SAASyQ,SAAS3E,MACvB,2D,+BCPA4E,GAAgB,CACpBnM,KAAM,GACNG,WAAW,EACXnC,UAAU,EACVkC,aAAa,GAqDAjC,GAlDK,WAA4D,IAA3DF,EAA0D,uDAAlDoO,GAAkD,yCAAjCxS,EAAiC,EAAjCA,KAAMmB,EAA2B,EAA3BA,QAASpB,EAAkB,EAAlBA,MAAOuB,EAAW,EAAXA,KAClE,OAAQtB,GACR,IjCnB0B,eiCoBxB,OAAO,2BACFoE,GADL,IAEEiC,KAAMlF,IAEV,IjCvBwB,aiCwBtB,OAAO,2BACFiD,GADL,IAEEoC,WAAW,IAEf,IjC3BwB,aiC4BtB,OAAO,2BACFpC,GADL,IAEEoC,WAAW,EACXH,KAAMtG,GAAS,KAEnB,IjChCuB,YiCiCrB,OAAO,2BACFqE,GADL,IAEEC,UAAU,EACVmC,WAAW,IAEf,IjCrC6B,kBiCsC3B,OAAO,2BACFpC,GADL,IAEEC,UAAU,EACVmC,WAAW,IAEf,IjCxCwB,aiCyCtB,OAAO,2BACFpC,GADL,IAEEmC,aAAa,IAEjB,IjC5C0B,eiC6CxB,OAAO,2BACFnC,GADL,IAEEmC,aAAa,IAEjB,IjChDwB,aiCiDtB,OAAO,2BACFnC,GADL,IAEEoC,UAAWlF,IAEf,QACE,OAAO8C,IC9DLoO,GAAgB,CACpBjO,eAAe,EACfkO,cAAc,EACdpN,cAAe,IAsBFjD,GAnBA,WAAuD,IAAtDgC,EAAqD,uDAA7CoO,GAA6C,yCAA5BxS,EAA4B,EAA5BA,KAAMsB,EAAsB,EAAtBA,KAAMmE,EAAgB,EAAhBA,UACnD,OAAQzF,GACR,IlCJ4B,iBkCK1B,OAAO,2BACFoE,GADL,IAEEG,cAAejD,IAGnB,IlCT2B,gBkCUzB,OAAO,2BACF8C,GADL,IAEEiB,cAAeI,IAGnB,QACE,OAAOrB,ICdIsO,GALKC,2BAAgB,CAClCrO,eACAlC,YCCawQ,GAFDC,uBAAYH,GAAaI,+BAAoBC,2BAAgBC,QCI3EC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAQA,IAChB,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJO,SAASC,eAAe,SLoHpB,kBAAmBjK,WACrBA,UAAUkK,cAAcC,MAAMxN,MAAK,SAAAyN,GACjCA,EAAaC,kB","file":"static/js/main.277c1d69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/YouChef.751d2a05.png\";","const fetchSearchBar = async (url) => {\n  const fetchItems = await fetch(url);\n  const items = await fetchItems.json();\n  const type = Object.keys(items);\n  return items[type];\n};\n\nexport default fetchSearchBar;\n","export const fetchDrinksCategories = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  const request = await fetch(endpoint);\n  const response = await request.json();\n\n  return response.drinks.map(({ strCategory }) => strCategory);\n};\n\nexport const fetchMealsCategories = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const request = await fetch(endpoint);\n  const response = await request.json();\n\n  return response.meals.map(({ strCategory }) => strCategory);\n};\n\nexport const fetchByCategory = async (recipeType, category) => {\n  try {\n    const endpoint = recipeType === 'Drinks'\n      ? `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`\n      : `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n    const request = await fetch(endpoint);\n    const response = await request.json();\n\n    return response[recipeType.toLowerCase()];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n","import {\n  REQ_SEARCH,\n  SET_SEARCH,\n  NOT_FOUND,\n  RESET_NOT_FOUND,\n  RECIPES_LIST,\n  COULD_REDIRECT,\n  SELECT_FILTER,\n  DONT_FETCH,\n  SHOULD_FETCH,\n  IS_LOADING,\n} from './actionTypes';\nimport fetchSearchBar from '../../services';\nimport { fetchByCategory } from '../../services/fetchCategories';\n\nexport const getRecipesAction = (recipes) => ({\n  type: RECIPES_LIST,\n  recipes,\n});\n\nexport const reqSearch = () => ({ type: REQ_SEARCH });\n\nexport const setSearch = (items) => ({ type: SET_SEARCH, items });\n\nexport const resetNotFound = () => ({ type: RESET_NOT_FOUND });\n\nexport const notFound = () => ({ type: NOT_FOUND });\n\nexport const toggleCouldRedirectAction = (bool) => ({\n  type: COULD_REDIRECT,\n  bool,\n});\n\nexport const selectFilterAction = (newFilter) => ({\n  type: SELECT_FILTER,\n  newFilter,\n});\n\nexport const fetchSearch = (url) => async (dispatch) => {\n  dispatch(reqSearch());\n  const items = await fetchSearchBar(url);\n  if (!items) return dispatch(notFound());\n  dispatch(setSearch(items));\n  return dispatch(resetNotFound());\n};\n\nexport const getRecipesThunk = (recipeType, category) => async (dispatch) => {\n  const recipes = await fetchByCategory(recipeType, category);\n\n  dispatch(getRecipesAction(recipes));\n};\n\nexport const dontFetch = () => ({ type: DONT_FETCH });\n\nexport const shouldFetch = () => ({ type: SHOULD_FETCH });\n\nexport const isLoadingAction = (bool) => ({ type: IS_LOADING, bool });\n","// export const SEARCH = 'SEARCH';\nexport const RECIPES_LIST = 'RECIPES_LIST';\nexport const REQ_SEARCH = 'REQ_SEARCH';\nexport const SET_SEARCH = 'SET_SEARCH';\nexport const NOT_FOUND = 'NOT_FOUND';\nexport const RESET_NOT_FOUND = 'RESET_NOT_FOUND';\nexport const COULD_REDIRECT = 'COULD_REDIRECT';\nexport const SELECT_FILTER = 'SELECT_FILTER';\nexport const DONT_FETCH = 'DONT_FETCH';\nexport const SHOULD_FETCH = 'SHOULD_FETCH';\nexport const IS_LOADING = 'IS_LOADING';\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchSearch, toggleCouldRedirectAction } from '../Redux/actions';\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n  const location = useLocation();\n  const [search, setSearch] = useState({\n    endPoint: ((location.pathname === '/comidas')\n      ? 'https://www.themealdb.com/api/json/v1/1/'\n      : 'https://www.thecocktaildb.com/api/json/v1/1/'),\n    word: '',\n    filter: 'filter.php?i=',\n  });\n\n  const handleChange = ({ target: { name, value, typeSearch } }) => {\n    console.log(typeSearch);\n    setSearch({ ...search, [name]: value });\n  };\n\n  const handleClick = () => {\n    const { fetchSearchItems, toggleCouldRedirect } = props;\n    const { endPoint, word, filter } = search;\n    if (word.length >= 2 && filter === 'search.php?f=') {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    const url = `${endPoint}${filter}${word}`;\n    fetchSearchItems(url);\n    toggleCouldRedirect(true);\n  };\n\n  const renderRadioButtons = () => (\n    <div className=\"radio-buttons\">\n      <label htmlFor=\"ingredient-search-radio\">\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          value=\"filter.php?i=\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"ingredient-search-radio\"\n          onChange={ handleChange }\n          checked={ search.filter === 'filter.php?i=' }\n          className=\"radio\"\n        />\n        Ingredientes\n      </label>\n      <label htmlFor=\"name-search-radio\">\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          value=\"search.php?s=\"\n          data-testid=\"name-search-radio\"\n          id=\"name-search-radio\"\n          onChange={ handleChange }\n          checked={ search.filter === 'search.php?s=' }\n          className=\"radio\"\n        />\n        Nome\n      </label>\n      <label htmlFor=\"first-letter-search-radio\">\n        <input\n          type=\"radio\"\n          name=\"filter\"\n          value=\"search.php?f=\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"first-letter-search-radio\"\n          onChange={ handleChange }\n          checked={ search.filter === 'search.php?f=' }\n          className=\"radio\"\n        />\n        Primeira letra\n      </label>\n    </div>\n  );\n\n  return (\n    <div className=\"SearchBar\">\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        name=\"word\"\n        value={ search.word }\n        onChange={ handleChange }\n        placeholder=\"Digite aqui\"\n        className=\"search-input\"\n      />\n      {renderRadioButtons()}\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleClick }\n        className=\"search-button\"\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchSearchItems: (url) => dispatch(fetchSearch(url)),\n  toggleCouldRedirect: (bool) => dispatch(toggleCouldRedirectAction(bool)),\n});\n\nSearchBar.propTypes = {\n  fetchSearchItems: func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { string } from 'prop-types';\nimport './Header.css';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nfunction Header(props) {\n  const { title, searchBtn = false } = props;\n  const [search, setSearch] = useState(false);\n\n  const handleClick = () => {\n    setSearch(!search);\n  };\n\n  const renderSearchButton = () => (\n    <button\n      type=\"button\"\n      data-testid=\"search-top-btn\"\n      src=\"../images/searchIcon.svg\"\n      onClick={ handleClick }\n    >\n      <img src={ searchIcon } alt=\"search\" />\n    </button>\n  );\n\n  const renderHeader = () => (\n    <header className=\"Header\">\n      <Link to=\"/perfil\">\n        <button\n          type=\"button\"\n          data-testid=\"profile-top-btn\"\n          src=\"../images/profileIcon.svg\"\n        >\n          <img src={ profileIcon } alt=\"profile\" />\n        </button>\n      </Link>\n      <h3 data-testid=\"page-title\">{ title }</h3>\n      {searchBtn && renderSearchButton()}\n    </header>\n  );\n\n  return (\n    <div>\n      {renderHeader()}\n      {search && <SearchBar />}\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  title: string,\n}.isRequired;\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { objectOf, number } from 'prop-types';\nimport './Card.css';\n\nfunction Card({ item, index, type, cardTestid, titleTestid }) {\n  const name = (type === 'comidas') ? 'strMeal' : 'strDrink';\n  const thumb = (type === 'comidas') ? 'strMealThumb' : 'strDrinkThumb';\n  const id = (type === 'comidas') ? 'idMeal' : 'idDrink';\n\n  return (\n    <Link to={ `/${type}/${item[id]}` }>\n      <div data-testid={ cardTestid || `${index}-recipe-card` } className=\"Card\">\n        <img src={ item[thumb] } alt=\"item\" data-testid={ `${index}-card-img` } />\n        <p data-testid={ titleTestid || `${index}-card-name` }>{item[name]}</p>\n      </div>\n    </Link>\n  );\n}\n\nCard.propTypes = {\n  item: objectOf(),\n  index: number,\n}.isRequired;\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { arrayOf, bool } from 'prop-types';\nimport { resetNotFound } from '../Redux/actions';\nimport Card from './Card';\nimport './Cards.css';\n\nfunction Cards({ notFound, items, idType, notFoundReset, couldRedirect }) {\n  const location = useLocation();\n  const type = (location.pathname === '/comidas') ? 'comidas' : 'bebidas';\n  const maxItemsToshow = 12;\n\n  const alertNotFound = () => {\n    notFoundReset();\n    alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  };\n\n  return (\n    <div className=\"Cards\">\n      {notFound && alertNotFound()}\n      {items.length === 0 && <p>Faça uma busca</p>}\n      {items.length === 1 && couldRedirect ? (\n        <Redirect to={ `${location.pathname}/${items[0][idType]}` } />\n      ) : null}\n      {items.slice(0, maxItemsToshow).map((item, index) => (\n        <Card\n          item={ item }\n          index={ index }\n          type={ type }\n          key={ index }\n          detailsURL={ `${location.pathname}/${items[0][idType]}` }\n        />\n      ))}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  notFound: state.recipesList.notFound,\n  couldRedirect: state.filter.couldRedirect,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  notFoundReset: () => dispatch(resetNotFound()),\n});\n\nCards.propTypes = {\n  items: arrayOf(),\n  notFound: bool,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\nimport PropTypes from 'prop-types';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\" data-testid=\"footer\">\n      <Link to=\"/bebidas\">\n        <button type=\"button\">\n          <img src={ drinkIcon } alt=\"drink\" data-testid=\"drinks-bottom-btn\" />\n        </button>\n      </Link>\n      <Link to=\"/explorar\">\n        <button type=\"button\">\n          <img\n            src={ exploreIcon }\n            alt=\"explore\"\n            data-testid=\"explore-bottom-btn\"\n          />\n        </button>\n      </Link>\n      <Link to=\"/comidas\">\n        <button type=\"button\">\n          <img src={ mealIcon } alt=\"drink\" data-testid=\"food-bottom-btn\" />\n        </button>\n      </Link>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  getRecipes: PropTypes.func,\n}.isRequired;\n\nexport default Footer;\n","export const fetchMeals = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const request = await fetch(endpoint);\n  const response = await request.json();\n  const recipesList = response.meals;\n\n  return recipesList;\n};\n\nexport const fetchBeverages = async () => {\n  const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const request = await fetch(endpoint);\n  const response = await request.json();\n  const recipesList = response.drinks;\n\n  return recipesList;\n};\n\nexport const fetchRecipes = async (url, type) => {\n  const endpoint = url;\n  const request = await fetch(endpoint);\n  const response = await request.json();\n  const recipesList = response[type];\n\n  return recipesList;\n};\n\nexport const fetchRecipeDetails = async (idType, id) => {\n  const url = (idType === 'meals')\n    ? `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`\n    : `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n  const request = await fetch(url);\n  const response = await request.json();\n  const type = Object.keys(response);\n  return response[type][0];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  toggleCouldRedirectAction,\n  getRecipesThunk,\n  selectFilterAction,\n  getRecipesAction,\n} from '../Redux/actions';\nimport { fetchRecipes } from '../services/fetchRecipes';\n\nfunction Filter({\n  filter,\n  testId,\n  getRecipes,\n  recipeType,\n  selectFilter,\n  currentFilter,\n  setRecipes,\n  toggleCouldRedirect,\n}) {\n  const { pathname } = useLocation();\n  const handleClick = () => {\n    const currentFilterValue = filter !== currentFilter ? filter : '';\n    const endpoint = pathname === '/comidas'\n      ? 'https://www.themealdb.com/api/json/v1/1/search.php?s='\n      : 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n    const typeOfList = pathname === '/comidas' ? 'meals' : 'drinks';\n\n    if (currentFilterValue === '') {\n      fetchRecipes(endpoint, typeOfList).then((data) => setRecipes(data));\n    } else {\n      getRecipes(recipeType, currentFilterValue);\n    }\n\n    selectFilter(currentFilterValue);\n    toggleCouldRedirect(false);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ handleClick }\n      data-testid={ testId }\n      className=\"button-filter\"\n    >\n      {filter}\n    </button>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleCouldRedirect: (bool) => dispatch(toggleCouldRedirectAction(bool)),\n  getRecipes: (recipes, category) => dispatch(getRecipesThunk(recipes, category)),\n  selectFilter: (newFilter) => dispatch(selectFilterAction(newFilter)),\n  setRecipes: (recipesList) => dispatch(getRecipesAction(recipesList)),\n});\n\nconst mapStateToProps = (state) => ({\n  currentFilter: state.filter.currentFilter,\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  getRecipes: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  fetchDrinksCategories,\n  fetchMealsCategories,\n} from '../services/fetchCategories';\nimport Filter from './Filter';\nimport { fetchRecipes } from '../services/fetchRecipes';\nimport { getRecipesAction } from '../Redux/actions';\nimport './Filters.css';\n\nfunction Filters({ type, setRecipes }) {\n  const { pathname } = useLocation();\n  const [filters, setFilters] = useState([]);\n  const fetchFilters = type === 'Drinks' ? fetchDrinksCategories : fetchMealsCategories;\n\n  useEffect(() => {\n    const numberOfFilters = 5;\n    fetchFilters().then((data) => setFilters(data.slice(0, numberOfFilters)));\n  }, [fetchFilters]);\n\n  const handleClick = () => {\n    const endpoint = pathname === '/comidas'\n      ? 'https://www.themealdb.com/api/json/v1/1/search.php?s='\n      : 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n    const typeOfList = pathname === '/comidas' ? 'meals' : 'drinks';\n\n    fetchRecipes(endpoint, typeOfList).then((data) => setRecipes(data));\n  };\n\n  return (\n    <div className=\"Filters\">\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n        data-testid=\"All-category-filter\"\n        className=\"button-filter\"\n      >\n        All\n      </button>\n      {filters.map((filter, index) => (\n        <Filter\n          key={ index }\n          filter={ filter }\n          testId={ `${filter}-category-filter` }\n          recipeType={ type }\n        />\n      ))}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRecipes: (recipesList) => dispatch(getRecipesAction(recipesList)),\n});\n\nFilters.propTypes = {\n  type: PropTypes.string,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Filters);\n","import React from 'react';\n\nfunction ChefLoading() {\n  return (\n    <div className=\"loading-container\">\n      <img className=\"chef-loading\" src=\"https://i.ibb.co/CJjTg19/chef-animation.gif\" alt=\"Chef\" />\n    </div>\n  );\n}\n\nexport default ChefLoading;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Cards from '../components/Cards';\nimport Footer from '../components/Footer';\nimport { fetchMeals } from '../services/fetchRecipes';\nimport './Styles/Recipes.css';\nimport { getRecipesAction, isLoadingAction, shouldFetch } from '../Redux/actions';\nimport Filters from '../components/Filters';\nimport ChefLoading from '../components/ChefLoading';\n\nfunction Foods({ getRecipes, recipes, itFetch, shouldItFetch, setIsLoading, isLoading }) {\n  useEffect(() => {\n    setIsLoading(true);\n    const timeout = 1500;\n    if (shouldItFetch) {\n      fetchMeals().then((data) => {\n        getRecipes(data);\n        setTimeout(() => {\n          setIsLoading(false);\n        }, timeout);\n      });\n      itFetch();\n    }\n  }, [getRecipes, itFetch, setIsLoading, shouldItFetch]);\n\n  const toLoad = (\n    <div>\n      <Filters type=\"Meals\" />\n      <Cards items={ recipes } idType=\"idMeal\" />\n    </div>\n  );\n  return (\n    <div id=\"Recipes\" className=\"Foods\">\n      <Header title=\"Explorar Comidas\" searchBtn />\n      {isLoading ? <ChefLoading /> : toLoad}\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  recipes: state.recipesList.list,\n  shouldItFetch: state.recipesList.shouldFetch,\n  isLoading: state.recipesList.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getRecipes: (data) => dispatch(getRecipesAction(data)),\n  itFetch: () => dispatch(shouldFetch()),\n  setIsLoading: (bool) => dispatch(isLoadingAction(bool)),\n});\n\nFoods.propTypes = {\n  getRecipes: PropTypes.func,\n  recipes: PropTypes.arrayOf({}),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Foods);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Cards from '../components/Cards';\nimport Footer from '../components/Footer';\nimport { fetchBeverages } from '../services/fetchRecipes';\nimport './Styles/Recipes.css';\nimport { getRecipesAction, shouldFetch, isLoadingAction } from '../Redux/actions';\nimport Filters from '../components/Filters';\nimport ChefLoading from '../components/ChefLoading';\n\nfunction Beverages({\n  getRecipes,\n  recipes,\n  itFetch,\n  shouldItFetch,\n  setIsLoading,\n  isLoading }) {\n  useEffect(() => {\n    setIsLoading(true);\n    const timeout = 1500;\n    if (shouldItFetch) {\n      fetchBeverages().then((data) => {\n        getRecipes(data);\n        setTimeout(() => {\n          setIsLoading(false);\n        }, timeout);\n      });\n      itFetch();\n    }\n  }, [getRecipes, itFetch, setIsLoading, shouldItFetch]);\n\n  const toLoad = (\n    <div>\n      <Filters type=\"Drinks\" />\n      <Cards items={ recipes } idType=\"idDrink\" />\n    </div>\n  );\n\n  return (\n    <div id=\"Recipes\" className=\"Baverages\">\n      <Header title=\"Explorar Bebidas\" searchBtn />\n      {isLoading ? <ChefLoading /> : toLoad}\n      <Footer />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  recipes: state.recipesList.list,\n  shouldItFetch: state.recipesList.shouldFetch,\n  isLoading: state.recipesList.isLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getRecipes: (data) => dispatch(getRecipesAction(data)),\n  itFetch: () => dispatch(shouldFetch()),\n  setIsLoading: (bool) => dispatch(isLoadingAction(bool)),\n});\n\nBeverages.propTypes = {\n  getRecipes: PropTypes.func,\n  recipes: PropTypes.arrayOf({}),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Beverages);\n","const fetchIngredients = async (query) => {\n  const endpoint = `https://www.the${query}db.com/api/json/v1/1/list.php?i=list`;\n  const responseIngredients = await fetch(endpoint);\n  const ingredients = await responseIngredients.json();\n  if (query === 'meal') return ingredients.meals.map((item) => item.strIngredient);\n  return ingredients.drinks.map((item) => item.strIngredient1);\n};\n\nexport default fetchIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { func } from 'prop-types';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchSearch, dontFetch } from '../Redux/actions';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport fetchIngredients from '../services/fetchIngredients';\n\nfunction Ingredients({ fetchRecipes, doNotFetch }) {\n  const [ingredients, setIngredients] = useState([]);\n  const location = useLocation();\n  const query = location.pathname.includes('comidas') ? 'meal' : 'cocktail';\n  const type = location.pathname.includes('comidas') ? 'comidas' : 'bebidas';\n\n  useEffect(() => {\n    const getIngredients = async () => {\n      const maxItemsToShow = 12;\n      const allIngredients = await fetchIngredients(query);\n      setIngredients(allIngredients.slice(0, maxItemsToShow));\n    };\n    getIngredients();\n  }, [query]);\n\n  const handleClick = (ingredient) => {\n    doNotFetch();\n    const url = `https://www.the${query}db.com/api/json/v1/1/filter.php?i=${ingredient}`;\n    fetchRecipes(url);\n  };\n\n  return (\n    <div className=\"Ingredients\">\n      <Header title=\"Explorar Ingredientes\" />\n      <section className=\"Cards\">\n        {ingredients.map((ingredient, index) => (\n          <Link to={ `/${type}` } key={ index }>\n            <button\n              type=\"button\"\n              onClick={ () => handleClick(ingredient) }\n              className=\"button\"\n            >\n              <div data-testid={ `${index}-ingredient-card` } className=\"Card\">\n                <img\n                  src={ `https://www.the${query}db.com/images/ingredients/${ingredient}-Small.png` }\n                  alt={ ingredient }\n                  data-testid={ `${index}-card-img` }\n                />\n                <p data-testid={ `${index}-card-name` }>{ingredient}</p>\n              </div>\n            </button>\n          </Link>\n        ))}\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchRecipes: (url) => dispatch(fetchSearch(url)),\n  doNotFetch: () => dispatch(dontFetch()),\n});\n\nIngredients.propTypes = {\n  fetchRecipes: func,\n  doNotFetch: func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Ingredients);\n","export const fetchAreas = async () => {\n  const endpoint = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n  const request = await fetch(endpoint);\n  const response = await request.json();\n\n  return response.meals.map(({ strArea }) => strArea);\n};\n\nexport const fetchByArea = async (area) => {\n  const endpoint = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`;\n  const request = await fetch(endpoint);\n  const response = await request.json();\n\n  return response.meals;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchAreas, fetchByArea } from '../services/fetchAreas';\nimport { fetchMeals } from '../services/fetchRecipes';\nimport './Styles/Areas.css';\nimport '../components/Cards.css';\nimport '../components/Card.css';\n\nfunction Areas() {\n  const [areas, setAreas] = useState([]);\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    fetchAreas().then((data) => setAreas(data));\n    fetchMeals().then((data) => setRecipes(data));\n  }, []);\n\n  const handleChange = ({ target: { value } }) => {\n    fetchByArea(value).then((data) => setRecipes(data));\n  };\n\n  const quantityToShow = 12;\n\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" searchBtn />\n      <main className=\"Areas\">\n        <section>\n          <select\n            data-testid=\"explore-by-area-dropdown\"\n            onChange={ handleChange }\n          >\n            <option data-testid=\"All-option\" value=\"All\">\n              All\n            </option>\n            {areas.map((area, index) => (\n              <option data-testid={ `${area}-option` } key={ index } value={ area }>\n                {area}\n              </option>\n            ))}\n          </select>\n        </section>\n        <section className=\"Cards\">\n          {recipes\n            .slice(0, quantityToShow)\n            .map(({ strMeal, strMealThumb, idMeal }, index) => (\n              <Link\n                data-testid={ `${index}-recipe-card` }\n                key={ index }\n                to={ `/comidas/${idMeal}` }\n              >\n                <div className=\"Card\">\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    src={ strMealThumb }\n                    alt=\"Meal\"\n                  />\n                  <p data-testid={ `${index}-card-name` } className=\"name\">\n                    {strMeal}\n                  </p>\n                </div>\n              </Link>\n            ))}\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Areas;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport './Styles/Done.css';\n\nfunction Done() {\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [copiedLink, setCopiedLink] = useState('');\n\n  useEffect(() => {\n    const recipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipes) {\n      setDoneRecipes(recipes);\n      setFilteredRecipes(recipes);\n    }\n  }, []);\n\n  const filter = ({ target: { name } }) => {\n    const filtered = doneRecipes.filter((recipe) => recipe.type.includes(name));\n    setFilteredRecipes(filtered);\n  };\n\n  const copyLink = async (id, type) => {\n    const link = `http://localhost:3000/${type}s/${id}`;\n    setCopiedLink(id);\n    return navigator.clipboard.writeText(link);\n  };\n\n  return (\n    <div className=\"Done-recipes\">\n      <Header title=\"Receitas Feitas\" />\n      <main>\n        <section className=\"filters\">\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-all-btn\"\n            type=\"button\"\n            name=\"\"\n            onClick={ filter }\n          >\n            All\n          </button>\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-food-btn\"\n            type=\"button\"\n            name=\"comida\"\n            onClick={ filter }\n          >\n            Food\n          </button>\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-drink-btn\"\n            type=\"button\"\n            name=\"bebida\"\n            onClick={ filter }\n          >\n            Drinks\n          </button>\n        </section>\n\n        <section className=\"cards\">\n          {filteredRecipes.map((recipe, index) => (\n            <div key={ index } className=\"Done-card\">\n              <span>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <img\n                    className=\"image\"\n                    src={ recipe.image }\n                    alt=\"Recipe\"\n                    data-testid={ `${index}-horizontal-image` }\n                  />\n                </Link>\n              </span>\n              <span className=\"info\">\n                <div className=\"top-info\">\n                  <p\n                    className=\"top-text\"\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {recipe.type === 'comida'\n                      ? `${recipe.area} - ${recipe.category}`\n                      : recipe.alcoholicOrNot}\n                  </p>\n                  <button\n                    type=\"button\"\n                    onClick={ () => copyLink(recipe.id, recipe.type) }\n                  >\n                    <img\n                      className=\"share-btn\"\n                      src={ shareIcon }\n                      alt=\"Share\"\n                      data-testid={ `${index}-horizontal-share-btn` }\n                    />\n                  </button>\n                  {recipe.id === copiedLink && (\n                    <p className=\"copied-link\">Link copiado!</p>\n                  )}\n                </div>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <h3 className=\"name\" data-testid={ `${index}-horizontal-name` }>\n                    {recipe.name}\n                  </h3>\n                </Link>\n                <p\n                  className=\"date\"\n                  data-testid={ `${index}-horizontal-done-date` }\n                >\n                  {`Feita em: ${recipe.doneDate}`}\n                </p>\n                {recipe.tags !== null && (\n                  <div className=\"tags\">\n                    {recipe.tags.slice(0, 2).map((tag, indexTags) => (\n                      <span\n                        className=\"tag\"\n                        key={ indexTags }\n                        data-testid={ `${index}-${tag}-horizontal-tag` }\n                      >\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </span>\n            </div>\n          ))}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Done;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport './Styles/Favorites.css';\n\nfunction Favorites() {\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [copiedLink, setCopiedLink] = useState('');\n  const [toFilter, setToFilter] = useState('');\n\n  const filter = ({ target: { name } }) => {\n    const filtered = favoriteRecipes.filter((recipe) => recipe.type.includes(name));\n    setFilteredRecipes(filtered);\n    setToFilter(name);\n  };\n\n  const copyLink = async (id, type) => {\n    const link = `http://localhost:3000/${type}s/${id}`;\n    setCopiedLink(id);\n    return navigator.clipboard.writeText(link);\n  };\n\n  const dislike = (dislikeRecipe) => {\n    const newFavorites = favoriteRecipes\n      .filter((favorite) => favorite.id !== dislikeRecipe.id)\n      .filter((favorite) => favorite.name !== dislikeRecipe.name);\n    setFavoriteRecipes(newFavorites);\n    const newFiltered = newFavorites\n      .filter((recipe) => recipe.type.includes(toFilter));\n    setFilteredRecipes(newFiltered);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n  };\n\n  useEffect(() => {\n    const getFavoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    setFavoriteRecipes(getFavoriteRecipes);\n    setFilteredRecipes(getFavoriteRecipes);\n  }, []);\n\n  return (\n    <div className=\"Favorites\">\n      <Header title=\"Receitas Favoritas\" />\n      <main>\n        <section className=\"filters\">\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-all-btn\"\n            type=\"button\"\n            name=\"\"\n            onClick={ filter }\n          >\n            All\n          </button>\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-food-btn\"\n            type=\"button\"\n            name=\"comida\"\n            onClick={ filter }\n          >\n            Food\n          </button>\n          <button\n            className=\"filter\"\n            data-testid=\"filter-by-drink-btn\"\n            type=\"button\"\n            name=\"bebida\"\n            onClick={ filter }\n          >\n            Drinks\n          </button>\n        </section>\n\n        <section className=\"cards\">\n          {filteredRecipes && filteredRecipes.map((recipe, index) => (\n            <div key={ index } className=\"favorite-card\">\n              <span>\n                <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                  <img\n                    className=\"image\"\n                    src={ recipe.image }\n                    alt=\"Recipe\"\n                    data-testid={ `${index}-horizontal-image` }\n                  />\n                </Link>\n              </span>\n              <span className=\"info\">\n                <div className=\"top-info\">\n                  <p\n                    className=\"top-text\"\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {recipe.type === 'comida'\n                      ? `${recipe.area} - ${recipe.category}`\n                      : recipe.alcoholicOrNot}\n                  </p>\n                  <Link to={ `/${recipe.type}s/${recipe.id}` }>\n                    <h3 className=\"name\" data-testid={ `${index}-horizontal-name` }>\n                      {recipe.name}\n                    </h3>\n                  </Link>\n                </div>\n                <div className=\"buttons\">\n                  <button\n                    type=\"button\"\n                    onClick={ () => copyLink(recipe.id, recipe.type) }\n                  >\n                    <img\n                      className=\"share-btn\"\n                      src={ shareIcon }\n                      alt=\"Share\"\n                      data-testid={ `${index}-horizontal-share-btn` }\n                    />\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={ () => dislike(recipe) }\n                  >\n                    <img\n                      className=\"favorite-btn\"\n                      src={ blackHeartIcon }\n                      alt=\"Dislike\"\n                      data-testid={ `${index}-horizontal-favorite-btn` }\n                    />\n                  </button>\n                </div>\n                {recipe.id === copiedLink && (\n                  <p className=\"copied-link\">Link copiado!</p>\n                )}\n              </span>\n            </div>\n          ))}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Favorites;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport './Styles/Profile.css';\n\nfunction Profile() {\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    const getEmail = JSON.parse(localStorage.getItem('user'));\n    if (getEmail) setEmail(getEmail.email);\n  }, []);\n\n  const handleClick = () => {\n    localStorage.clear();\n  };\n\n  return (\n    <div className=\"Profile\">\n      <Header title=\"Perfil\" />\n      <main>\n        <h1 className=\"email\" data-testid=\"profile-email\">\n          {email}\n        </h1>\n        <div className=\"buttons\">\n          <Link className=\"link\" to=\"/receitas-feitas\">\n            <button\n              data-testid=\"profile-done-btn\"\n              className=\"button\"\n              type=\"button\"\n            >\n              Receitas Feitas\n            </button>\n          </Link>\n          <Link className=\"link\" to=\"/receitas-favoritas\">\n            <button\n              data-testid=\"profile-favorite-btn\"\n              className=\"button\"\n              type=\"button\"\n            >\n              Receitas Favoritas\n            </button>\n          </Link>\n          <Link className=\"link\" to=\"/\">\n            <button\n              data-testid=\"profile-logout-btn\"\n              className=\"button\"\n              type=\"button\"\n              onClick={ handleClick }\n            >\n              Sair\n            </button>\n          </Link>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport './Styles/Explore.css';\n\nfunction Explore() {\n  return (\n    <div>\n      <Header title=\"Explorar\" />\n      <div className=\"Explore\">\n        <Link to=\"/explorar/comidas\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            data-testid=\"explore-food\"\n          >\n            Explorar Comidas\n          </button>\n        </Link>\n        <Link to=\"/explorar/bebidas\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            data-testid=\"explore-drinks\"\n          >\n            Explorar Bebidas\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction Favorites() {\n  return (\n    <div>\n      <Header title=\"Explorar Bebidas\" />\n      <div className=\"Explore\">\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/bebidas/178319\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            className=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction Favorites() {\n  return (\n    <div>\n      <Header title=\"Explorar Comidas\" />\n      <div className=\"Explore\">\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/explorar/comidas/area\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-area\"\n            className=\"button\"\n          >\n            Por Local de Origem\n          </button>\n        </Link>\n        <Link to=\"/comidas/52771\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-surprise\"\n            className=\"button\"\n          >\n            Me Surpreenda!\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Favorites;\n","import React, { useEffect, useState } from 'react';\nimport { objectOf } from 'prop-types';\nimport { useLocation } from 'react-router';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction LikeBtn({ recipe }) {\n  const [like, setLike] = useState(false);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const location = useLocation();\n  const type = location.pathname.includes('comidas') ? 'comida' : 'bebida';\n  const recipeToSave = type === 'comida'\n    ? {\n      id: recipe.idMeal,\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n    }\n    : {\n      id: recipe.idDrink,\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n    };\n\n  useEffect(() => {\n    const checkLiked = () => {\n      const likedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (likedRecipes) {\n        const isLiked = likedRecipes\n          .find((liked) => liked.type === type && liked.id === recipeToSave.id);\n        if (isLiked) setLike(true);\n      }\n      setFavoriteRecipes(likedRecipes);\n    };\n    checkLiked();\n  }, [recipeToSave.id, type]);\n\n  const likeRecipe = () => {\n    switch (like) {\n    case false: {\n      const toSave = [...favoriteRecipes || [], recipeToSave];\n      localStorage.setItem('favoriteRecipes', JSON.stringify(toSave));\n      setFavoriteRecipes(toSave);\n      break;\n    }\n    default: {\n      const toSave = favoriteRecipes\n        .filter((favorite) => favorite.id !== recipeToSave.id)\n        .filter((favorite) => favorite.name !== recipeToSave.name);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(toSave));\n      setFavoriteRecipes(toSave);\n      break;\n    }\n    }\n    setLike(!like);\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid=\"favorite-btn\"\n        onClick={ likeRecipe }\n        src={ like ? blackHeartIcon : whiteHeartIcon }\n      >\n        <img src={ like ? blackHeartIcon : whiteHeartIcon } alt=\"Favorite button\" />\n      </button>\n    </div>\n  );\n}\n\nLikeBtn.propTypes = {\n  recipe: objectOf(),\n}.isRequired;\n\nexport default LikeBtn;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { objectOf } from 'prop-types';\nimport Carousel from 'react-multi-carousel';\nimport shareIcon from '../images/shareIcon.svg';\nimport { fetchMeals } from '../services/fetchRecipes';\nimport Card from './Card';\nimport 'react-multi-carousel/lib/styles.css';\nimport LikeBtn from './LikeBtn';\n\nfunction DetailsDrink({ recipe, inProgressRecipes, handleClick, done }) {\n  const [recommends, setRecommends] = useState([]);\n  const [allIngrdients, setAllIngrdients] = useState([]);\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n  const location = useLocation();\n  const { strDrink, strDrinkThumb, strAlcoholic, strInstructions } = recipe;\n  const responsive = {\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 2,\n    },\n  };\n\n  useEffect(() => {\n    const getIngredients = () => {\n      const ingredients = [];\n      const ingreQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strIngredient'));\n      const measureQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strMeasure'));\n      ingreQtt.forEach((item, index) => {\n        if (recipe[item] !== null && recipe[item] !== '') {\n          ingredients.push({ name: recipe[item], quantity: recipe[measureQtt[index]] });\n        }\n      });\n      setAllIngrdients(ingredients);\n    };\n    const toSlice = 6;\n    fetchMeals().then((data) => setRecommends(data.slice(0, toSlice)));\n    getIngredients();\n  }, [recipe]);\n\n  const renderButton = () => (\n    <Link to={ `${location.pathname}/in-progress` }>\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-btn\"\n        onClick={ handleClick }\n      >\n        { !inProgressRecipes ? 'Iniciar Receita' : 'Continuar Receita'}\n      </button>\n    </Link>\n  );\n\n  const shareBtn = async () => {\n    const link = `http://localhost:3000${location.pathname}`;\n    setIsLinkCopied(true);\n    return navigator.clipboard.writeText(link);\n  };\n\n  return (\n    <div className=\"Details\">\n      <img\n        src={ strDrinkThumb }\n        alt={ strDrink }\n        data-testid=\"recipe-photo\"\n      />\n      <div className=\"title-btns\">\n        <div>\n          <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n          <h3 data-testid=\"recipe-category\">{strAlcoholic}</h3>\n        </div>\n        <div>\n          <button type=\"button\" data-testid=\"share-btn\" onClick={ shareBtn }>\n            <img src={ shareIcon } alt=\"Share button\" />\n          </button>\n          <LikeBtn recipe={ recipe } />\n          {isLinkCopied && <p>Link copiado!</p>}\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h2>Ingredients</h2>\n        <div>\n          {allIngrdients.map(({ name, quantity }, index) => (\n            <p\n              key={ Math.random() }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`${name} - ${quantity}`}\n            </p>))}\n        </div>\n      </div>\n      <div className=\"instructions\">\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n      </div>\n      <div className=\"recomendations\">\n        <h2>Recomended</h2>\n        <Carousel responsive={ responsive }>\n          {recommends.map((item, index) => (<Card\n            cardTestid={ `${index}-recomendation-card` }\n            titleTestid={ `${index}-recomendation-title` }\n            key={ index }\n            item={ item }\n            index={ index }\n            type=\"comidas\"\n          />))}\n        </Carousel>\n      </div>\n      {!done && renderButton() }\n    </div>\n  );\n}\n\nDetailsDrink.propTypes = {\n  recipe: objectOf(),\n}.isRequired;\n\nexport default DetailsDrink;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { objectOf } from 'prop-types';\nimport Carousel from 'react-multi-carousel';\nimport shareIcon from '../images/shareIcon.svg';\nimport { fetchBeverages } from '../services/fetchRecipes';\nimport Card from './Card';\nimport 'react-multi-carousel/lib/styles.css';\nimport LikeBtn from './LikeBtn';\n\nfunction DetailsFood({ recipe, inProgressRecipes, handleClick, done }) {\n  const [recommends, setRecommends] = useState([]);\n  const [allIngrdients, setAllIngrdients] = useState([]);\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n  const location = useLocation();\n  const {\n    strMeal,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strYoutube,\n  } = recipe;\n  const embedId = strYoutube\n    ? strYoutube.split('https://www.youtube.com/watch?v=')[1]\n    : '';\n  const responsive = {\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 2,\n    },\n  };\n\n  useEffect(() => {\n    const getIngredients = () => {\n      const ingredients = [];\n      const ingreQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strIngredient'));\n      const measureQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strMeasure'));\n      ingreQtt.forEach((item, index) => {\n        if (recipe[item] !== null && recipe[item] !== '') {\n          ingredients.push({\n            name: recipe[item],\n            quantity: recipe[measureQtt[index]],\n          });\n        }\n      });\n      setAllIngrdients(ingredients);\n    };\n    const toSlice = 6;\n    fetchBeverages().then((data) => setRecommends(data.slice(0, toSlice)));\n    getIngredients();\n  }, [recipe]);\n\n  const renderButton = () => (\n    <Link to={ `${location.pathname}/in-progress` }>\n      <button\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        className=\"start-recipe-btn\"\n        onClick={ handleClick }\n      >\n        {!inProgressRecipes ? 'Iniciar Receita' : 'Continuar Receita'}\n      </button>\n    </Link>\n  );\n\n  const shareBtn = async () => {\n    const link = `http://localhost:3000${location.pathname}`;\n    setIsLinkCopied(true);\n    return navigator.clipboard.writeText(link);\n  };\n\n  return (\n    <div className=\"Details\">\n      <img src={ strMealThumb } alt={ strMeal } data-testid=\"recipe-photo\" />\n      <div className=\"title-btns\">\n        <div>\n          <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n          <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n        </div>\n        <div>\n          <button type=\"button\" data-testid=\"share-btn\" onClick={ shareBtn }>\n            <img src={ shareIcon } alt=\"Share button\" />\n          </button>\n          <LikeBtn recipe={ recipe } />\n          {isLinkCopied && <p>Link copiado!</p>}\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h2>Ingredients</h2>\n        <div>\n          {allIngrdients.map(({ name, quantity }, index) => (\n            <p\n              key={ Math.random() }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`- ${name} - ${quantity}`}\n            </p>\n          ))}\n        </div>\n      </div>\n      <div className=\"instructions\">\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n      </div>\n      <div className=\"video\">\n        <h2>Video</h2>\n        <iframe\n          src={ `https://www.youtube.com/embed/${embedId}` }\n          title=\"video\"\n          frameBorder=\"0\"\n          data-testid=\"video\"\n        />\n      </div>\n      <div className=\"recomendations\">\n        <h2>Recomended</h2>\n        <Carousel responsive={ responsive }>\n          {recommends.map((item, index) => (\n            <Card\n              cardTestid={ `${index}-recomendation-card` }\n              titleTestid={ `${index}-recomendation-title` }\n              key={ index }\n              item={ item }\n              index={ index }\n              type=\"bebidas\"\n            />\n          ))}\n        </Carousel>\n      </div>\n      {!done && renderButton()}\n    </div>\n  );\n}\n\nDetailsFood.propTypes = {\n  recipe: objectOf(),\n}.isRequired;\n\nexport default DetailsFood;\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <img className=\"chef-loading\" src=\"https://i.ibb.co/CJjTg19/chef-animation.gif\" alt=\"Chef\" />\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { connect } from 'react-redux';\nimport { func, objectOf } from 'prop-types';\nimport { toggleCouldRedirectAction } from '../Redux/actions';\nimport DetailsDrink from '../components/DetailsDrink';\nimport DetailsFood from '../components/DetailsFood';\nimport Loading from '../components/Loading';\nimport { fetchRecipeDetails } from '../services/fetchRecipes';\nimport './Styles/Details.css';\n\nfunction Details({ match: { params: { id } }, toggleCouldRedirect }) {\n  const [recipe, setRecipe] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [inProgressRecipes, setInProgressRecipes] = useState(false);\n  const [done, setDone] = useState(false);\n  const { pathname } = useLocation();\n  const idType = (pathname.includes('comida')) ? 'meals' : 'cocktails';\n\n  useEffect(() => {\n    const checkInProgressStore = () => {\n      let inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (!inProgress) return null;\n      inProgress = inProgress[idType];\n      inProgress = Object.keys(inProgress);\n      setInProgressRecipes(inProgress.find((item) => item === id));\n    };\n\n    const checkDoneRecipie = () => {\n      const isDone = localStorage.getItem('doneRecipes');\n      if (isDone) {\n        const isItDone = JSON.parse(isDone).some((item) => item.id === id);\n        setDone(isItDone);\n      }\n    };\n\n    fetchRecipeDetails(idType, id)\n      .then((data) => {\n        setRecipe(data);\n        setLoading(false);\n        checkInProgressStore();\n        checkDoneRecipie();\n        toggleCouldRedirect(false);\n      });\n  }, [id, idType, toggleCouldRedirect]);\n\n  const handleClick = () => {\n    const savedProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!savedProgress) {\n      const inProgress = { cocktails: {}, meals: {} };\n      inProgress[idType] = {\n        [id]: [],\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    } else {\n      savedProgress[idType][id] = [];\n      localStorage.setItem('inProgressRecipes', JSON.stringify(savedProgress));\n    }\n    setLoading(true);\n  };\n\n  return (\n    <div>\n      {loading && <Loading />}\n      {!loading && idType === 'meals' && <DetailsFood\n        recipe={ recipe }\n        handleClick={ handleClick }\n        inProgressRecipes={ inProgressRecipes }\n        done={ done }\n      />}\n      {!loading && idType === 'cocktails' && <DetailsDrink\n        recipe={ recipe }\n        handleClick={ handleClick }\n        inProgressRecipes={ inProgressRecipes }\n        done={ done }\n      />}\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleCouldRedirect: (bool) => dispatch(toggleCouldRedirectAction(bool)),\n});\n\nDetails.propTypes = {\n  toggleCouldRedirect: func,\n  match: objectOf(),\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Details);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport logo from '../images/YouChef.png';\nimport './Styles/Login.css';\n\nfunction Login() {\n  const [state, setState] = useState({\n    login: '',\n    isLoginValid: false,\n    password: '',\n    isPasswordValid: false,\n  });\n\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  const verifyLogin = () => {\n    const validLogin = new RegExp(\n      /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\n    );\n    if (validLogin.test(state.login)) {\n      setState({\n        ...state,\n        isLoginValid: true,\n      });\n    }\n  };\n\n  const verifyPassword = () => {\n    const minLength = 6;\n    if (state.password.length > minLength) {\n      setState({\n        ...state,\n        isPasswordValid: true,\n      });\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleClick = () => {\n    const magicNumber = 1;\n    const userData = {\n      email: state.login,\n    };\n    localStorage.setItem('mealsToken', magicNumber);\n    localStorage.setItem('cocktailsToken', magicNumber);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setShouldRedirect(true);\n  };\n\n  return (\n    <div className=\"Login\">\n      <img src={ logo } alt=\"YouChef\" />\n      <form className=\"form\">\n        <h1>Login</h1>\n        <input\n          className=\"input\"\n          type=\"email\"\n          data-testid=\"email-input\"\n          placeholder=\"Email\"\n          name=\"login\"\n          onChange={ handleChange }\n          onKeyUp={ verifyLogin }\n          value={ state.login }\n        />\n        <input\n          className=\"input\"\n          type=\"password\"\n          data-testid=\"password-input\"\n          placeholder=\"Senha\"\n          name=\"password\"\n          onChange={ handleChange }\n          onKeyUp={ verifyPassword }\n          value={ state.password }\n        />\n        <button\n          className=\"button\"\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ !state.isLoginValid || !state.isPasswordValid }\n          onClick={ handleClick }\n        >\n          Entrar\n        </button>\n      </form>\n      {shouldRedirect ? <Redirect to=\"/comidas\" /> : null}\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { objectOf } from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport { fetchRecipeDetails } from '../services/fetchRecipes';\nimport '../pages/Styles/Details.css';\nimport LikeBtn from './LikeBtn';\n\nfunction FoodInProgress() {\n  const [allIngrdients, setAllIngrdients] = useState([]);\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n  const [recipe, setRecipe] = useState({});\n  const [progress, setInProgress] = useState({});\n  const location = useLocation();\n  const {\n    strMeal,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strArea,\n    strTags,\n  } = recipe;\n  const idRecipe = location.pathname.split('/')[2];\n\n  const getLocalStorage = () => {\n    const getStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (getStorage !== null) {\n      const result = getStorage.meals[idRecipe];\n      return result;\n    } return [];\n  };\n  const ingredientsDone = getLocalStorage();\n\n  useEffect(() => {\n    fetchRecipeDetails('meals', idRecipe).then((data) => setRecipe(data));\n  }, [idRecipe]);\n\n  useEffect(() => {\n    const getIngredients = () => {\n      const ingredients = [];\n      const inProgress = {};\n      const ingreQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strIngredient'));\n      const measureQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strMeasure'));\n      ingreQtt.forEach((item, index) => {\n        if (recipe[item] !== null && recipe[item] !== '') {\n          const checkProgress = ingredientsDone.includes(recipe[item]);\n          ingredients.push({\n            name: recipe[item],\n            quantity: recipe[measureQtt[index]],\n          });\n          inProgress[recipe[item]] = checkProgress;\n        }\n      });\n      setInProgress(inProgress);\n      setAllIngrdients(ingredients);\n    };\n    getIngredients();\n  }, [idRecipe, recipe]);\n\n  const isDisabled = Object.values(progress).every((ingr) => ingr === true);\n\n  const handleClick = () => {\n    const doneRecipesLocal = [];\n    const [month, date, year] = new Date().toLocaleDateString('pt-BR').split('/');\n    const doneRecipe = {\n      id: idRecipe,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate: `${date}/${month}/${year}`,\n      tags: [strTags],\n    };\n\n    const getDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getDoneRecipes !== null) {\n      getDoneRecipes.push(doneRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(getDoneRecipes));\n    } else {\n      doneRecipesLocal.push(doneRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipesLocal));\n    }\n  };\n  const renderButton = () => (\n    <Link to=\"/receitas-feitas\">\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        className=\"start-recipe-btn\"\n        disabled={ !isDisabled }\n        onClick={ handleClick }\n      >\n        Finalizar Receita\n      </button>\n    </Link>\n  );\n\n  const handleChange = ({ target }) => {\n    setInProgress({\n      ...progress,\n      [target.id]: target.checked,\n    });\n\n    const previousProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (previousProgress !== null) {\n      const savedIngredients = previousProgress.meals[idRecipe];\n      const includes = savedIngredients.includes(target.id);\n      const deleteItem = savedIngredients.indexOf(target.id);\n\n      switch (includes) {\n      case false:\n        savedIngredients.push(target.id);\n        localStorage.setItem('inProgressRecipes', JSON.stringify(previousProgress));\n        break;\n      default:\n        savedIngredients.splice(deleteItem, 1);\n        localStorage.setItem('inProgressRecipes', JSON.stringify(previousProgress));\n        break;\n      }\n    } else {\n      const theProgress = {\n        cocktails: {},\n        meals: {\n          [idRecipe]: [target.id],\n        },\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(theProgress));\n    }\n  };\n\n  const shareBtn = async () => {\n    const splitBar = location.pathname.split('/');\n    const recipeLink = splitBar[1].concat('/', splitBar[2]);\n    const link = `http://localhost:3000/${recipeLink}`;\n    setIsLinkCopied(true);\n    return navigator.clipboard.writeText(link);\n  };\n\n  return (\n    <div className=\"Details\">\n      <img src={ strMealThumb } alt={ strMeal } data-testid=\"recipe-photo\" />\n      <div className=\"title-btns\">\n        <div>\n          <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n          <h3 data-testid=\"recipe-category\">{strCategory}</h3>\n        </div>\n        <div>\n          <button type=\"button\" data-testid=\"share-btn\" onClick={ shareBtn }>\n            <img src={ shareIcon } alt=\"Share button\" />\n          </button>\n          <LikeBtn recipe={ recipe } />\n          {isLinkCopied && <p>Link copiado!</p>}\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h2>Ingredients</h2>\n        <div>\n          <form className=\"all-ingredients\">\n            {allIngrdients.map(({ name, quantity }, index) => (\n              <label\n                key={ name }\n                htmlFor={ name }\n                className={ progress[name] ? 'on' : 'off' }\n                data-testid={ `${index}-ingredient-step` }\n              >\n                <input\n                  id={ name }\n                  type=\"checkbox\"\n                  onChange={ handleChange }\n                  checked={ progress[name] }\n                />\n                {` ${name} - ${quantity}`}\n              </label>\n            ))}\n          </form>\n        </div>\n      </div>\n      <div className=\"instructions recomendations\">\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n      </div>\n      {/* {!done && renderButton()} */}\n      { renderButton() }\n    </div>\n  );\n}\n\nFoodInProgress.propTypes = {\n  recipe: objectOf(),\n}.isRequired;\n\nexport default FoodInProgress;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { objectOf } from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\nimport { fetchRecipeDetails } from '../services/fetchRecipes';\nimport '../pages/Styles/Details.css';\nimport LikeBtn from './LikeBtn';\n\nfunction DrinkInProgress() {\n  const [allIngrdients, setAllIngrdients] = useState([]);\n  const [isLinkCopied, setIsLinkCopied] = useState(false);\n  const [recipe, setRecipe] = useState({});\n  const [progress, setInProgress] = useState({});\n  const location = useLocation();\n  const {\n    strDrink,\n    strDrinkThumb,\n    strAlcoholic,\n    strInstructions,\n    strCategory,\n    strTags } = recipe;\n  const idRecipe = location.pathname.split('/')[2];\n\n  const getLocalStorage = () => {\n    const getStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (getStorage !== null) {\n      const result = getStorage.cocktails[idRecipe];\n      return result;\n    } return [];\n  };\n  const ingredientsDone = getLocalStorage();\n\n  useEffect(() => {\n    fetchRecipeDetails('cocktails', idRecipe).then((data) => setRecipe(data));\n  }, [idRecipe]);\n\n  useEffect(() => {\n    const getIngredients = () => {\n      const ingredients = [];\n      const inProgress = {};\n      const ingreQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strIngredient'));\n      const measureQtt = Object.keys(recipe)\n        .filter((item) => item.includes('strMeasure'));\n      ingreQtt.forEach((item, index) => {\n        if (recipe[item] !== null && recipe[item] !== '') {\n          const checkProgress = ingredientsDone.includes(recipe[item]);\n          ingredients.push({\n            name: recipe[item],\n            quantity: recipe[measureQtt[index]],\n          });\n          inProgress[recipe[item]] = checkProgress;\n        }\n      });\n      setInProgress(inProgress);\n      setAllIngrdients(ingredients);\n    };\n    getIngredients();\n  }, [idRecipe, recipe]);\n\n  const isDisabled = Object.values(progress).every((ingr) => ingr === true);\n\n  const handleClick = () => {\n    const doneRecipesLocal = [];\n    const [month, date, year] = new Date().toLocaleDateString('pt-BR').split('/');\n    const doneRecipe = {\n      id: idRecipe,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: `${date}/${month}/${year}`,\n      tags: [strTags],\n    };\n\n    const getDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (getDoneRecipes !== null) {\n      getDoneRecipes.push(doneRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(getDoneRecipes));\n    } else {\n      doneRecipesLocal.push(doneRecipe);\n      localStorage.setItem('doneRecipes', JSON.stringify(doneRecipesLocal));\n    }\n  };\n\n  const renderButton = () => (\n    <Link to=\"/receitas-feitas\">\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        className=\"start-recipe-btn\"\n        disabled={ !isDisabled }\n        onClick={ handleClick }\n      >\n        Finalizar Receita\n      </button>\n    </Link>\n  );\n\n  const handleChange = ({ target }) => {\n    setInProgress({\n      ...progress,\n      [target.id]: target.checked,\n    });\n\n    const previousProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (previousProgress !== null) {\n      const savedIngredients = previousProgress.cocktails[idRecipe];\n      const includes = savedIngredients.includes(target.id);\n      const deleteItem = savedIngredients.indexOf(target.id);\n\n      switch (includes) {\n      case false:\n        savedIngredients.push(target.id);\n        localStorage.setItem('inProgressRecipes', JSON.stringify(previousProgress));\n        break;\n      default:\n        savedIngredients.splice(deleteItem, 1);\n        localStorage.setItem('inProgressRecipes', JSON.stringify(previousProgress));\n        break;\n      }\n    } else {\n      const theProgress = {\n        cocktails: {\n          [idRecipe]: [target.id],\n        },\n        meals: {},\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(theProgress));\n    }\n  };\n\n  const shareBtn = async () => {\n    const splitBar = location.pathname.split('/');\n    const recipeLink = splitBar[1].concat('/', splitBar[2]);\n    const link = `http://localhost:3000/${recipeLink}`;\n    setIsLinkCopied(true);\n    return navigator.clipboard.writeText(link);\n  };\n\n  return (\n    <div className=\"Details\">\n      <img src={ strDrinkThumb } alt={ strDrink } data-testid=\"recipe-photo\" />\n      <div className=\"title-btns\">\n        <div>\n          <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n          <h3 data-testid=\"recipe-category\">{strAlcoholic}</h3>\n        </div>\n        <div>\n          <button type=\"button\" data-testid=\"share-btn\" onClick={ shareBtn }>\n            <img src={ shareIcon } alt=\"Share button\" />\n          </button>\n          <LikeBtn recipe={ recipe } />\n          {isLinkCopied && <p>Link copiado!</p>}\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h2>Ingredients</h2>\n        <div>\n          <form className=\"all-ingredients\">\n            {allIngrdients.map(({ name, quantity }, index) => (\n              <label\n                key={ name }\n                htmlFor={ name }\n                className={ progress[name] ? 'on' : 'off' }\n                data-testid={ `${index}-ingredient-step` }\n              >\n                <input\n                  id={ name }\n                  type=\"checkbox\"\n                  onChange={ handleChange }\n                  checked={ progress[name] }\n                />\n                {` ${name} - ${quantity}`}\n              </label>\n            ))}\n          </form>\n        </div>\n      </div>\n      <div className=\"instructions recomendations\">\n        <h2>Instructions</h2>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n      </div>\n      {/* {!done && renderButton()} */}\n      { renderButton() }\n    </div>\n  );\n}\n\nDrinkInProgress.propTypes = {\n  recipe: objectOf(),\n}.isRequired;\n\nexport default DrinkInProgress;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <h1 style={ { textAlign: 'center' } }> Not Found</h1>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Foods from './pages/Foods';\nimport Beverages from './pages/Beverages';\nimport Ingredients from './pages/Ingredients';\nimport Areas from './pages/Areas';\nimport Done from './pages/Done';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport Explore from './pages/Explore';\nimport ExploreBeverages from './pages/ExploreBeverages';\nimport ExploreFoods from './pages/ExploreFoods';\nimport Details from './pages/Details';\nimport Login from './pages/Login';\nimport FoodInProgress from './components/FoodInProgress';\nimport DrinkInProgress from './components/DrinkInProgress';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route\n        path=\"/comidas/:id/in-progress\"\n        component={ FoodInProgress }\n      />\n      <Route path=\"/bebidas/:id/in-progress\" component={ DrinkInProgress } />\n      <Route path=\"/comidas/:id\" component={ Details } />\n      <Route path=\"/comidas\" component={ Foods } />\n      <Route path=\"/bebidas/:id\" component={ Details } />\n      <Route path=\"/bebidas\" component={ Beverages } />\n      <Route path=\"/explorar/comidas/area\" component={ Areas } />\n      <Route path=\"/explorar/bebidas/area\" component={ NotFound } />\n      <Route\n        path=\"/explorar/comidas/ingredientes\"\n        component={ Ingredients }\n      />\n      <Route\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ Ingredients }\n      />\n      <Route path=\"/explorar/comidas\" component={ ExploreFoods } />\n      <Route path=\"/explorar/bebidas\" component={ ExploreBeverages } />\n      <Route path=\"/explorar\" component={ Explore } />\n      <Route path=\"/receitas-favoritas\" component={ Favorites } />\n      <Route path=\"/receitas-feitas\" component={ Done } />\n      <Route path=\"/perfil\" component={ Profile } />\n      <Route exact path=\"/\" component={ Login } />\n      <Route component={ NotFound } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  RECIPES_LIST,\n  REQ_SEARCH,\n  SET_SEARCH,\n  NOT_FOUND,\n  RESET_NOT_FOUND,\n  DONT_FETCH,\n  SHOULD_FETCH,\n  IS_LOADING,\n} from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  list: [],\n  isLoading: false,\n  notFound: false,\n  shouldFetch: true,\n};\n\nconst recipesList = (state = INITIAL_STATE, { type, recipes, items, bool }) => {\n  switch (type) {\n  case RECIPES_LIST:\n    return {\n      ...state,\n      list: recipes,\n    };\n  case REQ_SEARCH:\n    return {\n      ...state,\n      isLoading: true,\n    };\n  case SET_SEARCH:\n    return {\n      ...state,\n      isLoading: false,\n      list: items || [],\n    };\n  case NOT_FOUND:\n    return {\n      ...state,\n      notFound: true,\n      isLoading: false,\n    };\n  case RESET_NOT_FOUND:\n    return {\n      ...state,\n      notFound: false,\n      isLoading: false,\n    };\n  case DONT_FETCH:\n    return {\n      ...state,\n      shouldFetch: false,\n    };\n  case SHOULD_FETCH:\n    return {\n      ...state,\n      shouldFetch: true,\n    };\n  case IS_LOADING:\n    return {\n      ...state,\n      isLoading: bool,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default recipesList;\n","import { COULD_REDIRECT, SELECT_FILTER } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  couldRedirect: false,\n  shouldFilter: true,\n  currentFilter: '',\n};\n\nconst filter = (state = INITIAL_STATE, { type, bool, newFilter }) => {\n  switch (type) {\n  case COULD_REDIRECT:\n    return {\n      ...state,\n      couldRedirect: bool,\n    };\n\n  case SELECT_FILTER:\n    return {\n      ...state,\n      currentFilter: newFilter,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\nimport recipesList from './recipesList';\nimport filter from './filter';\n\nconst rootReducer = combineReducers({\n  recipesList,\n  filter,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}